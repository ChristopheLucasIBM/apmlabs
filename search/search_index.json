{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"[Page last updated on 06 May 2021] IBM Maximo Asset Performance Management (APM) Labs APM Labs Overview Overview & what you will do Welcome to these Labs which will help you understand how IBM Maximo Manage , Monitor and Health work together. Here is an overview of the Labs presently available, followed by a short description of what you will do during those Labs. These Labs all assume that you have a working environment with the required access rights - see Prerequisites & Tools versions . Lab Name Remark Monitor on Maximo Application Suite 8.3 & SaaS In this Lab, you will generate IoT data, create anomalous readings, detect them and create nice Dashboards. That same IoT data will be used for the subsequent Health Labs. Monitor's look & feel is the same in its SaaS version & MAS83 version - so this Lab will work for both. Health on Maximo Application Suite 8.3 [NEW] This Lab can be run standalone up till its section 9. Update the Health Scoring Method . To complete its final step 10. [OPTIONAL] Map IoT Devices & Readings to Assets & Meter Readings , you must have completed this Monitor Lab section 1. Generate IoT data . Maximo Asset Health Insights 7.6.1 To run this Lab, you must have completed this Monitor Lab section 1. Generate IoT data . Other Note available yet (stay tuned): Predict on Maximo Application Suite 8.3 and Assist on Maximo Application Suite 8.3 In the Monitor on Maximo Application Suite 8.3 & SaaS lab, you will: Create 3 IoT Devices of type CL_Asset and generate simulated IoT data for them. Focusing on the temperature reading, we will generate anomalous readings during a couple minutes. Visualise the IoT data in Monitor and generate new data items. Create Anomaly Detection functions that will spot the anomalous readings you generated. Create Alerts based on the anomalies detected. Create a custom dashboard that will bring everything together. In the Health on Maximo Application Suite 8.3 lab, you will: set up the required Assets and Meter Groups in Manage (aka Maximo) create a sample Health Scoring Method, a Criticality and a Risk Method in Health populate all Cards (i.e. Health Score, Criticality, Risk, RUL, Age, Next PM, MRR) on your sample CL_Asset_1 in Health [OPTIONAL] finally, associate the IoT Devices we defined in the first Monitor Lab steps of 1. Generate IoT data to the Manage Assets and set up the required mappings between your IoT readings and Maximo Assets Meter Readings. At the end of this Lab, your CL_Asset_1 will look like this in Health, with all its cards populated and explained. In the Maximo Asset Health Insights 7.6.1 lab, you will: set up the required mappings and associations between the CL_Asset IoT Devices and corresponding Maximo Assets . set up the required mappings and associations between IoT readings and Maximo Meter Readings . create a sample Scoring Method to calculate the health of your Assets. Visualise the health of your Assets through a Dashboard . Intended audience These labs were conceived with the following audience in mind: IBMers & Business Partners : the main goal is to help you understand how the APM elements work and integrate. If you go step-by-step through all the lab material, you will become able to create an end-to-end custom APM demo for any scenario or customer. Anybody interested in APM : by just scrolling through the pages of these labs, you should get a clear view of the rich functionalities of the APM solution and how they could possibly help you on your 'Asset Optimisation' journey. Lab principles These labs were created with the following principles in mind: Fully data driven : you will start by creating simulated IoT data. That data will be our guide and 'golden thread' throughout all the labs: in Monitor you will create anomalies on it, then create advanced visualisations of it, then, in Health , it is that same data that you will ultimately use to visualise the condition of your asset. Fully Customisable : the IoT data we will use throughout these labs consists of 8 generic readings like temperature , pressure , vibration , speed etc. For each of those, we simulate random readings in a certain range e.g. \"temperature\": random(35,40) . If you wish to simulate fewer, more or other types of readings, or change the range of values for any reading - feel free ! Similarly, we decided to use a very generic naming for the Asset : YourInitials_Asset , i.e. CL_Asset for all the labs ( CL standing for Christophe Lucas ). You can of course decide to name your Asset differently, e.g. Pump , Engine , Conveyor Belt , Compressor , Turbine - you name it ! If you change the readings or asset name, the labs principles will remain exactly the same - you will just need to pay extra attention to your naming conventions and consistently substitue the names used in this material with yours ... Monkey See, Monkey Do : we have really tried to make these labs as easy and failure-proof as possible. For each (sub)section, a clearly numbered list of steps is provided, and below each list, a picture shows the screens corresponding to each step - with a 1., 2., 3. ... red number making the mapping. Also, if the images are too small, do not hesitate to right-click and open in new tab on them - they will appear bigger. What these APM Labs are not These labs are not official IBM documentation, and are provided as-is. What is Asset Performance Management (APM) ? Asset Performance Management (APM) and Enterprise Asset Management (EAM) are complementary programs. But whereas EAM enables the execution of the day to day asset maintenance activities like work scheduling, planning and work order tracking, APM is designed for decision support , i.e. APM uses advanced analytics and AI to help operations, maintenance leaders, reliability engineers and technicians make better decisions around their assets' lifecycle. By enabling ... operations people to have an enterprise wide view of their fleets of assets and detect anomalies in near real-time, reliability and maintenance professionals to track the real condition and health of assets and predict their failures, technicians to more quickly maintain or fix assets by providing them AI-based problem diagnosis and expert guidance, ... a sound use of an end-to-end APM solution can help: reduce unplanned downtime, shorten duration of outages, increase production output or decrease wasted time investigating false-positive alerts, reduce fleetwide operational risk by focusing on the right assets, increase asset availability, reduce unnecessary preventive maintenance, reduce time to make capital replacement planning decisions improve first time fix rate, reduce MTTR (mean time to repair), improve diagnosis accuracy and cut diagnosis time, standardize maintenance and repair processes reduce failures, reduce maintenance costs, improve asset utilisation, extended life of asset, and ultimately, enable a shift of maintenance strategies from a calendar or preventive base to a real condition, then predictive and prescriptive base. IBM Maximo APM is a fully integrated set of tools which is part of a yet broader ecosystem of IBM solutions which will help accelerate your 'Asset Optimisation' efforts. Those APM elements are: MANAGE : this refers to the 'core' Maximo component which provides advanced management capabilities of your Assets' lifecycle, including Asset definition, work orders management, planning and scheduling of your maintenance related activities etc. MONITOR : provides enterprise scale monitoring and AI-based anomaly detection. Main capabilities include: easily configurable dashboard (no-code widgets), workflow to drive ownership of issues, auto-generation of work orders, rapid data integration and hierarchical data filtering and management. HEALTH : provides a consolidated global view of assets, health visibility and analysis, condition based actions and replacement planning. Main capabilities include: dashboard with cards, map view, spreadsheet view, fleet-wide view and health drilldown, health based notifications and actions, flexible health scoring by asset type or groups, sensor data integration, job plan efficacy analysis, refurbish / replace prioritisation PREDICT : provides the ability to build asset failure models, to predict failures, to determine factors that contribute to failure and to score models with current sensor data. Main capabilities include: templates provided to build 5 common predictive models, view pre-built visualizations for the 5 common models, model scores contribute to the overall asset health in the HEALTH component. ASSIST : is an AI Assistance for field technicians which provides Diagnosis and Query capabilities. Using historical remote assistance data like past work orders, unstructured data like OEM manuals, as well as structured data like IoT readings, it allows technicians to: (a) ask questions in plain english to quickly find information relevant to the problem at hand, (b) diagnose asset issues based on observed factors, and get recommendations for the fix. The APM tools/elements that we will extensively use in the first version (December 2020) of these labs are MANAGE , MONITOR and HEALTH . In future versions we will add PREDICT and ASSIST . Prerequisites & Tools Versions These APM labs assume that you have a fully working and integrated environment set up and the IDs required to access it. The tool versions that were used to build these labs are: Lab Name Tools Versions Monitor on Maximo Application Suite 8.3 & SaaS IBM Maximo Asset Monitor SaaS: November 2020 (then February 2021 for latest updates). Works on MAS83-Monitor too. Health on Maximo Application Suite 8.3 Running on an OpenShift Cluster on IBM Cloud: MAS83-Monitor & MAS83-Health & Maximo 7.6.1.2 Maximo Asset Health Insights 7.6.1 IBM Maximo Asset Management 7.6.1.1 & IBM Maximo APM - Asset Health Insights 7.6.1.1. Other Note available yet (stay tuned): Predict on Maximo Application Suite 8.3 and Assist on Maximo Application Suite 8.3 If you have questions about how to get access to such an environment, about how to install, about which exact versions are required, about pricing etc ... please contact you instructor or your local IBM representative.","title":"Intro - Start Here"},{"location":"#ibm-maximo-asset-performance-management-apm-labs","text":"","title":"IBM Maximo Asset Performance Management (APM) Labs"},{"location":"#apm-labs-overview","text":"","title":"APM Labs Overview"},{"location":"#overview-what-you-will-do","text":"Welcome to these Labs which will help you understand how IBM Maximo Manage , Monitor and Health work together. Here is an overview of the Labs presently available, followed by a short description of what you will do during those Labs. These Labs all assume that you have a working environment with the required access rights - see Prerequisites & Tools versions . Lab Name Remark Monitor on Maximo Application Suite 8.3 & SaaS In this Lab, you will generate IoT data, create anomalous readings, detect them and create nice Dashboards. That same IoT data will be used for the subsequent Health Labs. Monitor's look & feel is the same in its SaaS version & MAS83 version - so this Lab will work for both. Health on Maximo Application Suite 8.3 [NEW] This Lab can be run standalone up till its section 9. Update the Health Scoring Method . To complete its final step 10. [OPTIONAL] Map IoT Devices & Readings to Assets & Meter Readings , you must have completed this Monitor Lab section 1. Generate IoT data . Maximo Asset Health Insights 7.6.1 To run this Lab, you must have completed this Monitor Lab section 1. Generate IoT data . Other Note available yet (stay tuned): Predict on Maximo Application Suite 8.3 and Assist on Maximo Application Suite 8.3 In the Monitor on Maximo Application Suite 8.3 & SaaS lab, you will: Create 3 IoT Devices of type CL_Asset and generate simulated IoT data for them. Focusing on the temperature reading, we will generate anomalous readings during a couple minutes. Visualise the IoT data in Monitor and generate new data items. Create Anomaly Detection functions that will spot the anomalous readings you generated. Create Alerts based on the anomalies detected. Create a custom dashboard that will bring everything together. In the Health on Maximo Application Suite 8.3 lab, you will: set up the required Assets and Meter Groups in Manage (aka Maximo) create a sample Health Scoring Method, a Criticality and a Risk Method in Health populate all Cards (i.e. Health Score, Criticality, Risk, RUL, Age, Next PM, MRR) on your sample CL_Asset_1 in Health [OPTIONAL] finally, associate the IoT Devices we defined in the first Monitor Lab steps of 1. Generate IoT data to the Manage Assets and set up the required mappings between your IoT readings and Maximo Assets Meter Readings. At the end of this Lab, your CL_Asset_1 will look like this in Health, with all its cards populated and explained. In the Maximo Asset Health Insights 7.6.1 lab, you will: set up the required mappings and associations between the CL_Asset IoT Devices and corresponding Maximo Assets . set up the required mappings and associations between IoT readings and Maximo Meter Readings . create a sample Scoring Method to calculate the health of your Assets. Visualise the health of your Assets through a Dashboard .","title":"Overview &amp; what you will do"},{"location":"#intended-audience","text":"These labs were conceived with the following audience in mind: IBMers & Business Partners : the main goal is to help you understand how the APM elements work and integrate. If you go step-by-step through all the lab material, you will become able to create an end-to-end custom APM demo for any scenario or customer. Anybody interested in APM : by just scrolling through the pages of these labs, you should get a clear view of the rich functionalities of the APM solution and how they could possibly help you on your 'Asset Optimisation' journey.","title":"Intended audience"},{"location":"#lab-principles","text":"These labs were created with the following principles in mind: Fully data driven : you will start by creating simulated IoT data. That data will be our guide and 'golden thread' throughout all the labs: in Monitor you will create anomalies on it, then create advanced visualisations of it, then, in Health , it is that same data that you will ultimately use to visualise the condition of your asset. Fully Customisable : the IoT data we will use throughout these labs consists of 8 generic readings like temperature , pressure , vibration , speed etc. For each of those, we simulate random readings in a certain range e.g. \"temperature\": random(35,40) . If you wish to simulate fewer, more or other types of readings, or change the range of values for any reading - feel free ! Similarly, we decided to use a very generic naming for the Asset : YourInitials_Asset , i.e. CL_Asset for all the labs ( CL standing for Christophe Lucas ). You can of course decide to name your Asset differently, e.g. Pump , Engine , Conveyor Belt , Compressor , Turbine - you name it ! If you change the readings or asset name, the labs principles will remain exactly the same - you will just need to pay extra attention to your naming conventions and consistently substitue the names used in this material with yours ... Monkey See, Monkey Do : we have really tried to make these labs as easy and failure-proof as possible. For each (sub)section, a clearly numbered list of steps is provided, and below each list, a picture shows the screens corresponding to each step - with a 1., 2., 3. ... red number making the mapping. Also, if the images are too small, do not hesitate to right-click and open in new tab on them - they will appear bigger.","title":"Lab principles"},{"location":"#what-these-apm-labs-are-not","text":"These labs are not official IBM documentation, and are provided as-is.","title":"What these APM Labs are not"},{"location":"#what-is-asset-performance-management-apm","text":"Asset Performance Management (APM) and Enterprise Asset Management (EAM) are complementary programs. But whereas EAM enables the execution of the day to day asset maintenance activities like work scheduling, planning and work order tracking, APM is designed for decision support , i.e. APM uses advanced analytics and AI to help operations, maintenance leaders, reliability engineers and technicians make better decisions around their assets' lifecycle. By enabling ... operations people to have an enterprise wide view of their fleets of assets and detect anomalies in near real-time, reliability and maintenance professionals to track the real condition and health of assets and predict their failures, technicians to more quickly maintain or fix assets by providing them AI-based problem diagnosis and expert guidance, ... a sound use of an end-to-end APM solution can help: reduce unplanned downtime, shorten duration of outages, increase production output or decrease wasted time investigating false-positive alerts, reduce fleetwide operational risk by focusing on the right assets, increase asset availability, reduce unnecessary preventive maintenance, reduce time to make capital replacement planning decisions improve first time fix rate, reduce MTTR (mean time to repair), improve diagnosis accuracy and cut diagnosis time, standardize maintenance and repair processes reduce failures, reduce maintenance costs, improve asset utilisation, extended life of asset, and ultimately, enable a shift of maintenance strategies from a calendar or preventive base to a real condition, then predictive and prescriptive base. IBM Maximo APM is a fully integrated set of tools which is part of a yet broader ecosystem of IBM solutions which will help accelerate your 'Asset Optimisation' efforts. Those APM elements are: MANAGE : this refers to the 'core' Maximo component which provides advanced management capabilities of your Assets' lifecycle, including Asset definition, work orders management, planning and scheduling of your maintenance related activities etc. MONITOR : provides enterprise scale monitoring and AI-based anomaly detection. Main capabilities include: easily configurable dashboard (no-code widgets), workflow to drive ownership of issues, auto-generation of work orders, rapid data integration and hierarchical data filtering and management. HEALTH : provides a consolidated global view of assets, health visibility and analysis, condition based actions and replacement planning. Main capabilities include: dashboard with cards, map view, spreadsheet view, fleet-wide view and health drilldown, health based notifications and actions, flexible health scoring by asset type or groups, sensor data integration, job plan efficacy analysis, refurbish / replace prioritisation PREDICT : provides the ability to build asset failure models, to predict failures, to determine factors that contribute to failure and to score models with current sensor data. Main capabilities include: templates provided to build 5 common predictive models, view pre-built visualizations for the 5 common models, model scores contribute to the overall asset health in the HEALTH component. ASSIST : is an AI Assistance for field technicians which provides Diagnosis and Query capabilities. Using historical remote assistance data like past work orders, unstructured data like OEM manuals, as well as structured data like IoT readings, it allows technicians to: (a) ask questions in plain english to quickly find information relevant to the problem at hand, (b) diagnose asset issues based on observed factors, and get recommendations for the fix. The APM tools/elements that we will extensively use in the first version (December 2020) of these labs are MANAGE , MONITOR and HEALTH . In future versions we will add PREDICT and ASSIST .","title":"What is Asset Performance Management (APM) ?"},{"location":"#prerequisites-tools-versions","text":"These APM labs assume that you have a fully working and integrated environment set up and the IDs required to access it. The tool versions that were used to build these labs are: Lab Name Tools Versions Monitor on Maximo Application Suite 8.3 & SaaS IBM Maximo Asset Monitor SaaS: November 2020 (then February 2021 for latest updates). Works on MAS83-Monitor too. Health on Maximo Application Suite 8.3 Running on an OpenShift Cluster on IBM Cloud: MAS83-Monitor & MAS83-Health & Maximo 7.6.1.2 Maximo Asset Health Insights 7.6.1 IBM Maximo Asset Management 7.6.1.1 & IBM Maximo APM - Asset Health Insights 7.6.1.1. Other Note available yet (stay tuned): Predict on Maximo Application Suite 8.3 and Assist on Maximo Application Suite 8.3 If you have questions about how to get access to such an environment, about how to install, about which exact versions are required, about pricing etc ... please contact you instructor or your local IBM representative.","title":"Prerequisites &amp; Tools Versions"},{"location":"about/about/","text":"About the Author & Your Feedback Christophe Lucas is a fan of Miles Davis who loves playing with words, images and micro structural sounds. As a pass-time, some times, he likes to rewrite the history of the hellenistic world, and some other times, he creates APM lab material like the one you just bravely went through. None of these labs would have been possible without the fantastic support of (at least) the following people: David Boggs , Arif Ali , Carlos Ferreira , Paulina Thomas , Graeme Pexton , Heena Purohit , Lynn Sweetwood , Pamela Watkins , Steve Kominiarek , Thomas Konrad , David Small , Sean Innes . THANKS ! You can contact Christophe to provide feedback or report any issue with this material via LinkedIn here .","title":"About & Feedback"},{"location":"about/about/#about-the-author-your-feedback","text":"Christophe Lucas is a fan of Miles Davis who loves playing with words, images and micro structural sounds. As a pass-time, some times, he likes to rewrite the history of the hellenistic world, and some other times, he creates APM lab material like the one you just bravely went through. None of these labs would have been possible without the fantastic support of (at least) the following people: David Boggs , Arif Ali , Carlos Ferreira , Paulina Thomas , Graeme Pexton , Heena Purohit , Lynn Sweetwood , Pamela Watkins , Steve Kominiarek , Thomas Konrad , David Small , Sean Innes . THANKS ! You can contact Christophe to provide feedback or report any issue with this material via LinkedIn here .","title":"About the Author &amp; Your Feedback"},{"location":"assist/assist/","text":"[Page last updated on 06 May 2021] ASSIST Lab The ASSIST lab does not exist yet. It will be created only for the MAS83-Predict version - stay tuned !","title":"Assist on Maximo Application Suite 8.3 [TBA]"},{"location":"assist/assist/#assist-lab","text":"The ASSIST lab does not exist yet. It will be created only for the MAS83-Predict version - stay tuned !","title":"ASSIST Lab"},{"location":"extras/extras/","text":"Use Monitor API to change Dimensions and load a Picture In the next section, we'll explain how to update and customize the initial Dashboard that we created earlier. Prior to that, we are going to use Monitor's API to: (a)change the CL_Asset_1_2_3 Metadata values in the Watson IoT platform so we can later see how Dashboards can be 'filtered' on those metadata values (called Dimensions on Monitor side), (b) add an image and tie it to the CL_Asset Entity Type so we can display it on the dashboard. We will be using Postman to do this. In Monitor 's left menu, click the Services menu. On the Watson IoT Platform Service row, click View Details then View More . Next to the API Key , click Copy to clipboard - paste this into your favourite notepad for future retrieval. Next to the API Token , click Copy to clipboard - paste this into your favourite notepad for future retrieval. In Postman, click Create New Request . In Select a collection or folder to save to , click Create Collection , name it APM Labs . Name your Request POST Dimensions to CL_Asset_1 . Click Save to APM Labs . Open the Request, and change its (default) Type from GET to POST . On the Authorization tab, leave the default Type to inherit auth from parent . Next to the POST field, enter this value: https://api-{{geo_country_code}}.connectedproducts.internetofthings.ibmcloud.com/api/images/v1/{{tenantID}}/entityType/CL_Asset/dimensional where you will first need to: (a) replace {{geo_country_code}} with your specific country code (your country code is in the beginning of your Monitor Dashboard URL: https://dashboard-{{geo_country_code}} ), i.e. to either us , uk , de , or beta (b) replace {{tenantID}} with your Monitor Tenant ID which you can find in the top right corner of your Monitor webpage underneath your IBMiD. An example of that string (which is the one used for these Labs) can be found below. On the Headers tab, in the Key and Value columns, enter the following 3 rows (a) Key = Content-Type and Value = application/json , (b) Key = x-api-key and Value = Write the 'API Key' you fetched in step 1. , (c) Key = x-api-token and Value = Write the 'Authentication Token' you fetched in step 1. , On the Body tab, click the raw tick-box and enter the below .json snippet. Click Send . You should get a returned result as per picture below. Repeat steps 2. to 6. for (a) CL_Asset_2 where you enter for the descriptiveLocation : \"value\" : \"Melbourne\" and for model : Model_B , (b) CL_Asset_2 where you enter for the descriptiveLocation : \"value\" : \"Sydney\" and for model : Model_B . Example of the string to be used in Postman 'POST Dimensions to CL_Asset_1' call: https://api-us.connectedproducts.internetofthings.ibmcloud.com/api/master/v1/CTP-PMI-Democore-2/entity/type/CL_Asset/dimensional [ { \"id\": \"CL_Asset_1\", \"name\" : \"descriptiveLocation\", \"type\" : \"LITERAL\", \"value\" : \"Perth\" }, { \"id\": \"CL_Asset_1\", \"name\" : \"model\", \"type\" : \"LITERAL\", \"value\" : \"Model_A\" } ] Let's now check that our changes worked ! There are several ways we can do that: Go to the Monitor left menu. Search for and open CL_Asset . Watch the updated values for descriptiveLocation and model fields for the 3 Assets. Go to the Data tab, in the Dimensions section, select Model then descriptiveLocation and watch ! We are now going to use another API call to upload a picture to the system. This picture will be used in the final 10. Update your Summary Dashboard . Create a new POST Image to CL_Asset EntityType Request in Postman, make it of POST type. Next to the POST field, enter this value: https://api-{{geo_country_code}}.connectedproducts.internetofthings.ibmcloud.com/api/images/v1/{{tenantID}}/entityType/CL_Asset after having replaced {{geo_country_code}} and {{tenantID}} with your values (see below for the sample string used for this lab). On the Authorization tab, leave the default Type to inherit auth from parent . On the Headers tab, in the Key and Value columns, enter the 2 rows x-api-key and x-api-token as you did previously (no need for the Content-Type / application/json row here). Download this image Image and save it as CL_Asset.jpg on your computer. On the Body tab, select the form-data tick-box. Enter enter the following 3 rows: (a) Key = imagefilecontent , select File on the right of the box. That will populate the Value column with a Choose Files button. Click it and select your CL_Asset.jpg . (b) Key = imageid and Value = CL_Asset (c) Key = tags and Value = CL_Asset . Click Send , observe the returned \"message\": \"success\" body. Example of the string to be used in Postman 'POST Image to CL_Asset EntityType' call: https://api-us.connectedproducts.internetofthings.ibmcloud.com/api/images/v1/CTP-PMI-Democore-2/entityType/CL_Asset [ARCHIVE] Update your Summary Dashboard [This section was created before the new MONITOR Dashboard Visual Editing Features of 2021, when JSON edition was required.] In this final 'Monitor Lab' section, we are going to bring everything together and show how you can create and customise dashboards to - literally - visualise whatever you want from all the data we generated so far. Remember 2. Create an Hourly Summary Dashboard section ? We then created the simplest, out-of-the-box, Hourly dashboard. In this section, we will (a) understand the .json file structure and card elements that make up dashboards, (b) create an advanced dashboard using most of the cards possibilities. Note that this will imply .json file editing and we therefore recommend a cool json editing tool that should at least provide the ability to collapse .json file levels for better visibility and easier navigation - we used the free version of BBEdit here. Open the CL_Asset Hourly dashboard. Top-right, click Edit Dashboard , then Export . Your browser will automatically download a .json file called Hourly-dashboard.json . For your reference, you can also find that original .json here: Hourly-dashboard-ORIGINAL.json . Let's have a look at the main elements of that .json file. In your .json editor, Collapse Folds below Level 2 . This shows the main elements of the file, i.e. : timeGrain , cards , title , layouts . In your .json editor, Collapse Folds below Level 3 . Note that you have 9 cards - one for each of the graphs you see on the dashboard. Note that each card has several sub-sections, including id (must be unique), dataSource (this where you define what data item(s) you want to display on the card), content (this is where you define the labels of your card), size , title and type (note all cards are presently of type TIMESERIES , we'll soon see other types). In your .json editor, Collapse Folds below Level 4 . Let's focus on the most complex card, i.e. the one displaying temperature IoT readings for which we earlier defined mean , max , min , std , count , sum data items. In the dataSource section, note (a) the attributes sub-sections (1 for each above data item), (b) the range section where we define the default count and interval of the card, (c) the timeGrain . In the content section, we define the labels of the card - note that each attribute defined in the attributes section MUST have a corresponding dataSourceID in the content-series . OK, that should be enough to understand at a high-level how dashboards work. Go through this Dashboard JSON Reference documentation to see all that can be done with dashboards, i.e. what types of cards you can add (value card, table card, bar chart card, image card etc), how to change the layout etc. This Tutorial (which will show you how to customize a dashboard) is just 1 out of 7 tutorials which will help you master dashboarding. As a final exercise, let's now create an advanced dashboard which will incorporate most of the card types (i.e. BAR , TIMESERIES , ALERT , IMAGE , VALUE ) and dashboarding capabilities. Open the CL_Asset Hourly dashboard. Top-right, click Edit dashboard . Save this Hourly-dashboard-CUSTOM.json file to your computer. Click Import , select the just-saved Hourly-dashboard-CUSTOM.json . You now have a preview of what your new dashboard will look like. The json provided will work if you followed the naming conventions throughout the labs, as all dataSourceId (like e.g. temperature , pressure_Hourly_mean etc) are pretty straightforward and did not involve your initials. Note that if you have any error while saving, check the error message which is usually helpful by providing you with a specific problematic data item name which you should then search within the .json. Likely causes of errors you might encounter will be related to how you named data items - e.g. if you named the picture XY_Asset.jpg instead of CL_Asset.jpg . This picture shows what your final dashboard should look like. Congratulations, you made it - hope you enjoyed this lab !","title":"Extras & Archive"},{"location":"extras/extras/#use-monitor-api-to-change-dimensions-and-load-a-picture","text":"In the next section, we'll explain how to update and customize the initial Dashboard that we created earlier. Prior to that, we are going to use Monitor's API to: (a)change the CL_Asset_1_2_3 Metadata values in the Watson IoT platform so we can later see how Dashboards can be 'filtered' on those metadata values (called Dimensions on Monitor side), (b) add an image and tie it to the CL_Asset Entity Type so we can display it on the dashboard. We will be using Postman to do this. In Monitor 's left menu, click the Services menu. On the Watson IoT Platform Service row, click View Details then View More . Next to the API Key , click Copy to clipboard - paste this into your favourite notepad for future retrieval. Next to the API Token , click Copy to clipboard - paste this into your favourite notepad for future retrieval. In Postman, click Create New Request . In Select a collection or folder to save to , click Create Collection , name it APM Labs . Name your Request POST Dimensions to CL_Asset_1 . Click Save to APM Labs . Open the Request, and change its (default) Type from GET to POST . On the Authorization tab, leave the default Type to inherit auth from parent . Next to the POST field, enter this value: https://api-{{geo_country_code}}.connectedproducts.internetofthings.ibmcloud.com/api/images/v1/{{tenantID}}/entityType/CL_Asset/dimensional where you will first need to: (a) replace {{geo_country_code}} with your specific country code (your country code is in the beginning of your Monitor Dashboard URL: https://dashboard-{{geo_country_code}} ), i.e. to either us , uk , de , or beta (b) replace {{tenantID}} with your Monitor Tenant ID which you can find in the top right corner of your Monitor webpage underneath your IBMiD. An example of that string (which is the one used for these Labs) can be found below. On the Headers tab, in the Key and Value columns, enter the following 3 rows (a) Key = Content-Type and Value = application/json , (b) Key = x-api-key and Value = Write the 'API Key' you fetched in step 1. , (c) Key = x-api-token and Value = Write the 'Authentication Token' you fetched in step 1. , On the Body tab, click the raw tick-box and enter the below .json snippet. Click Send . You should get a returned result as per picture below. Repeat steps 2. to 6. for (a) CL_Asset_2 where you enter for the descriptiveLocation : \"value\" : \"Melbourne\" and for model : Model_B , (b) CL_Asset_2 where you enter for the descriptiveLocation : \"value\" : \"Sydney\" and for model : Model_B . Example of the string to be used in Postman 'POST Dimensions to CL_Asset_1' call: https://api-us.connectedproducts.internetofthings.ibmcloud.com/api/master/v1/CTP-PMI-Democore-2/entity/type/CL_Asset/dimensional [ { \"id\": \"CL_Asset_1\", \"name\" : \"descriptiveLocation\", \"type\" : \"LITERAL\", \"value\" : \"Perth\" }, { \"id\": \"CL_Asset_1\", \"name\" : \"model\", \"type\" : \"LITERAL\", \"value\" : \"Model_A\" } ] Let's now check that our changes worked ! There are several ways we can do that: Go to the Monitor left menu. Search for and open CL_Asset . Watch the updated values for descriptiveLocation and model fields for the 3 Assets. Go to the Data tab, in the Dimensions section, select Model then descriptiveLocation and watch ! We are now going to use another API call to upload a picture to the system. This picture will be used in the final 10. Update your Summary Dashboard . Create a new POST Image to CL_Asset EntityType Request in Postman, make it of POST type. Next to the POST field, enter this value: https://api-{{geo_country_code}}.connectedproducts.internetofthings.ibmcloud.com/api/images/v1/{{tenantID}}/entityType/CL_Asset after having replaced {{geo_country_code}} and {{tenantID}} with your values (see below for the sample string used for this lab). On the Authorization tab, leave the default Type to inherit auth from parent . On the Headers tab, in the Key and Value columns, enter the 2 rows x-api-key and x-api-token as you did previously (no need for the Content-Type / application/json row here). Download this image Image and save it as CL_Asset.jpg on your computer. On the Body tab, select the form-data tick-box. Enter enter the following 3 rows: (a) Key = imagefilecontent , select File on the right of the box. That will populate the Value column with a Choose Files button. Click it and select your CL_Asset.jpg . (b) Key = imageid and Value = CL_Asset (c) Key = tags and Value = CL_Asset . Click Send , observe the returned \"message\": \"success\" body. Example of the string to be used in Postman 'POST Image to CL_Asset EntityType' call: https://api-us.connectedproducts.internetofthings.ibmcloud.com/api/images/v1/CTP-PMI-Democore-2/entityType/CL_Asset","title":"Use Monitor API to change Dimensions and load a Picture"},{"location":"extras/extras/#archive-update-your-summary-dashboard","text":"[This section was created before the new MONITOR Dashboard Visual Editing Features of 2021, when JSON edition was required.] In this final 'Monitor Lab' section, we are going to bring everything together and show how you can create and customise dashboards to - literally - visualise whatever you want from all the data we generated so far. Remember 2. Create an Hourly Summary Dashboard section ? We then created the simplest, out-of-the-box, Hourly dashboard. In this section, we will (a) understand the .json file structure and card elements that make up dashboards, (b) create an advanced dashboard using most of the cards possibilities. Note that this will imply .json file editing and we therefore recommend a cool json editing tool that should at least provide the ability to collapse .json file levels for better visibility and easier navigation - we used the free version of BBEdit here. Open the CL_Asset Hourly dashboard. Top-right, click Edit Dashboard , then Export . Your browser will automatically download a .json file called Hourly-dashboard.json . For your reference, you can also find that original .json here: Hourly-dashboard-ORIGINAL.json . Let's have a look at the main elements of that .json file. In your .json editor, Collapse Folds below Level 2 . This shows the main elements of the file, i.e. : timeGrain , cards , title , layouts . In your .json editor, Collapse Folds below Level 3 . Note that you have 9 cards - one for each of the graphs you see on the dashboard. Note that each card has several sub-sections, including id (must be unique), dataSource (this where you define what data item(s) you want to display on the card), content (this is where you define the labels of your card), size , title and type (note all cards are presently of type TIMESERIES , we'll soon see other types). In your .json editor, Collapse Folds below Level 4 . Let's focus on the most complex card, i.e. the one displaying temperature IoT readings for which we earlier defined mean , max , min , std , count , sum data items. In the dataSource section, note (a) the attributes sub-sections (1 for each above data item), (b) the range section where we define the default count and interval of the card, (c) the timeGrain . In the content section, we define the labels of the card - note that each attribute defined in the attributes section MUST have a corresponding dataSourceID in the content-series . OK, that should be enough to understand at a high-level how dashboards work. Go through this Dashboard JSON Reference documentation to see all that can be done with dashboards, i.e. what types of cards you can add (value card, table card, bar chart card, image card etc), how to change the layout etc. This Tutorial (which will show you how to customize a dashboard) is just 1 out of 7 tutorials which will help you master dashboarding. As a final exercise, let's now create an advanced dashboard which will incorporate most of the card types (i.e. BAR , TIMESERIES , ALERT , IMAGE , VALUE ) and dashboarding capabilities. Open the CL_Asset Hourly dashboard. Top-right, click Edit dashboard . Save this Hourly-dashboard-CUSTOM.json file to your computer. Click Import , select the just-saved Hourly-dashboard-CUSTOM.json . You now have a preview of what your new dashboard will look like. The json provided will work if you followed the naming conventions throughout the labs, as all dataSourceId (like e.g. temperature , pressure_Hourly_mean etc) are pretty straightforward and did not involve your initials. Note that if you have any error while saving, check the error message which is usually helpful by providing you with a specific problematic data item name which you should then search within the .json. Likely causes of errors you might encounter will be related to how you named data items - e.g. if you named the picture XY_Asset.jpg instead of CL_Asset.jpg . This picture shows what your final dashboard should look like. Congratulations, you made it - hope you enjoyed this lab !","title":"[ARCHIVE] Update your Summary Dashboard"},{"location":"health/health-mas/","text":"[Page last updated on 06 May 2021] [NEW] HEALTH Lab on Maximo Application Suite (8.3) TIP : If the images seem too small to read, just right-click them, open in new tab and zoom in/out. I have tried to make all images readable with clear 1., 2., 3. etc references to the corresponding instruction steps. 0. Prerequisites & Objectives Prerequisites There are no prerequisites if you just plan to go till section 9. Update the Health Scoring Method - you will generate all the data that you need in this Health lab which is self-contained. But if you plan to also complete the last section 10. [OPTIONAL] Map IoT Devices & Readings to Assets & Meter Readings , then you will need to have completed the first section of the Monitor lab: 1. Generate IoT data . This is because - and that is the beauty of the fully-integrated suite - the IoT data that we created in the first Monitor Lab steps of these APM labs is the exact same data that is used in these last Health Lab steps - thus enabling true, near real-time monitoring and condition-based maintenance of your assets ! Objectives In this Module you will: set up the required Assets and Meter Groups in Manage (aka Maximo) create a sample Health Scoring Method, a Criticality Method and a Risk Method in Health populate all Cards (i.e. Health Score, Criticality, Risk, RUL, Age, Next PM, MRR) on your sample CL_Asset_1 in Health [OPTIONAL] finally, associate the IoT Devices we defined in the first Monitor Lab steps of 1. Generate IoT data to the CL_Asset_1 and set up the required mappings between your IoT readings and Maximo Meter Readings. Note that in this section, we will alternatively mention Manage or Maximo - both names refer to the 1 same thing. 1. Setup initial Manage data Important Note on Naming Conventions : in this lab, you will create Assets which we name here CL_Asset_1 , CL_Asset_2 etc ( CL standing for Christophe Lucas). In a classroom setting, make sure every student replaces the CL by their initials throughout the lab e.g. XY_Asset_1 , AB_Asset_1 etc. 1. Launch Manage from MAS Suite Navigator Login to your MAS homepage. Click Launch on the Manage card. This will open Maximo in another browser tab. Login with your Maximo ID/pwd. 2. Create 3 Assets & 1 Query In Maximo, click the Go To Applications - Asset Menu. Click the + button to create an Asset, enter XY_Asset_1 - where XY are your initials. Note that for the rest of this lab, we will use CL_Asset_1 (e.g. CL for Christophe Lucas). CL_Asset_1 in both the Asset ID & Description fields. Click Save . Repeat this step for CL_Asset_2 and CL_Asset_3 . Click the List View menu. In the Asset field, enter CL_Asset* , click enter. This should return the list of your 3 just-created CL_Assets. Click the Save Query button, enter CL_Assets in both the Query Name & Description. Tick the Public box. 3. Create a Meter Group In this section, we will create a Maximo Meter Group containing 8 Meters that we will later associate to the IoT readings that we defined in the first section of the MONITOR lab. In Maximo left Find Navigation Item box, enter the Meter Groups application. Click the + button to create a Meter Group, enter CL_Asset in both the Meter Group & Description fields. Click New Row and in the Meter field, click Select Value . In the Select Value window that opens, enter Temp in the Meter field, hit Enter, select TEMP-C . Repeat previous step with the following Meters : VIBRATIONH , PRESSURE , SPEED , ACCELERAT , LOAD , TORQUE , STARTS . Click the Save button. Note that, although Meters like PRESSURE often exist in Maximo installations out-of-the-box, some of the Meters appearing in step 4. might not exist in Maximo yet. In which case, do the following: (a) Go to the Meters menu via Find Navigation Item , (b) click Create new Meter, enter e.g. ACCELERAT (the maximum name length is 9 ), select GAUGE as Meter Type , then Save . That newly created Meter can now be added to the Meter Group in step 4. 4. Associate Meter Group to Assets & create Meter Readings In Maximo, click the Go To Applications - Asset Menu. In the Asset field, enter CL_Asset* , click enter. This will return the list of you 3 CL_Assets , click CL_Asset_1 . Go to On CL_Asset_1 , go to its Meters tab, click Meter Group - Select Value . In the Select Value window, CL_Asset* , click enter, select the CL_Asset Meter Group. Click Save . This has loaded all the Meters we defined in the Meter Group . In left Find Navigation item box, enter Enter M , click Enter Meter Readings . For each Meter, enter values within the ranges that we defined for the IoT readings at the beginning of the Monitor lab in 2. Create IoT Simulation . For example: TEMP-C = 37 , VIBRATIONH = 4 , PRESSURE = 22 , SPEED = 17 , ACCELERAT = 9 , LOAD = 100 , TORQUE = 12 , STARTS = 1 . Click OK . Repeat steps 1. to 3. for CL_Asset_2 and CL_Asset_3 with whatever Meter values you want. 5. Create a Condition Monitoring Rule We are now going to define a Condition Monitoring rule where we will create upper and lower limits for the Meter Readings corresponding to TEMP-C , for Asset CL_Asset_1 . In Maximo, click the Go To Applications - Condition Monitoring Menu. Click the + to create a new Condition Monitoring. Name it CL_Asset . In the Point and Description fields, enter CL_Asset* . Next to the Asset field, click Select Value , search for CL_Asset_1 , select it. Next to the Meter field, click Select Value , search for TEMP-C , select it. In the Upper Warning Limit field, enter 40 , in the Lower Warning Limit field, enter 35 . In the Upper Action Limit field, enter 45 , in the Lower Action Limit field, enter 30 . Note that those values roughly correspond to the \"temperature\": random(35,40), values we originally defined in our IoT Simulation. With those limits defined, Condition Monitoring should pick-up those anomalous \"temperature\": random(46,48), we generated ! In the Upper Limit Job Pan field, click Select Value and select whatever existing Job Plan you want (we're just doing a demo here !). Do the same for Upper Limit Job Pan . Click Save . Your final screen should look like picture below. 2. Setup Health 1. View your Assets in Health From the MAS homepage, Click Launch on the Health card. Go to the top-left Assets menu. Enter CL in the Search bar. This will return the 3 Assets we just created in Maximo. Click on CL_Asset_1 , and observe the various cards that appear out-of-the-box - they are all empty for the moment. Let's populate them ! NOTE : it is normal that you see Predict in the top middle menu, even though you accessed this screen via the Health card. As you can see, Health & Predict actually appear on the same UI (i.e. Predict corresponding to the Predictions section just below the Health details section). When a user is entitled to both Predict & Health, Predict is always displayed. With a user only entitled to Health and NOT Predict, the top-middle menu would display Health. 2. Create Factors in Health associated to Meters in Manage Before we create our Scoring Methods, let's first check that the Meters we associated to the 3 CL_Assets in 4. Associate Meter Group to Assets & create Meter Readings exist (or not) as Factors in Health already - if they already exist, good, if not, we'll just create them. Go to the top-left Scoring menu, then go to the Factors tab. Check which ones of the Meters you earlier defined already exist as Factors in Health, e.g. typically you will see that VIBRATIONH , TEMP-C are already defined, but NOT e.g. Speed . Let's add Speed as a Factor. On the Factors tab, click Creat Factor . Name your Factor Speed , select Meter in the Calculate a score from box. Then select Speed in the pop-up box. In the Score Normalization's Upper & Lower Limits, enter 20 & 15 (corresponding to the upper & lower limits we originally defined in 1. Create IoT Simulation ). 3. Create a simple Health Scoring Method and associated Drivers Let's first create the Health Method itself: Via the Scoring menu, go to the Methods tab and click Create method . Name your method CL_Asset_Health , and select Health in the Type drop-box. Under the Scored Assets field, click Select and select the CL_Assets query we defined in 2. Create 3 Assets & 1 Query section. Let's now add Drivers to this Method: Staying on the CL_Asset_Health Method, click the + top-right icon to create a Driver. Name it Meter Readings , select One or more factors in the Calculate a score from tick-box. Click Create . The Meter Readings Driver now appears in the Drivers list, but is still empty. Let's add all the Factors (associated to Meter Readings) we just created to this Driver. Click the + top-right icon to select those Factors. In the opened Select factors window, select the 8 Factors relevant to our CL_Assets and click Add to driver . The 8 Factors are now added to the Meter Readings Driver. Click the top-right pencil to give a Weight to the 8 Factors. Note the total of the 8 Weights must be 100%. Enter 10% for all Factors, except for TEMP-C for which enter 30% . 4. Check your Health Score card and make it change We are now going to first check that the Health Scoring Method we just defined results in a Health score being calculated for our CL_Assets, based on the Meter Readings we entered in earlier section . Then, we will enter new Meter Readings for CL_Asset_1 and notice that its Health Score automatically changes. Go to the top-left Assets menu. Enter CL in the Search bar. This will return the 3 CL_Assets . Select CL_Asset_1 . Notice how the Health card displays a score of 70%. Going into the Health details card, notice how you can see the values of all the Meter Readings we entered, and how, based on the Factors and Method we defined, each Meter either shows red or green. Note that you can also see all Meter Readings in the Operational status section. From Health, access Manage by clicking on the top-left IBM Maximo Application Suite banner, then by clicking the Manage card. Go to Maximo's Asset menu, enter CL* in the Asset field and click enter. This will display the 3 CL_Assets , select your CL_Asset_1 . In the Find Navigation Item menu, write Enter Meter Readings , click Enter and just enter a value of 55 for TEMP-C . This means that TEMP-C is going to move above the normal operating conditions we originally defined in the IoT Simulation (i.e. between 35 & 40 Celsius). Go back to Health. Select your CL_Asset_1 row. Top-rigt, click Recalculate Health score . Observe how your Health card gets updated from 70% (orange) to 40% (red). 5. Create Criticality & Risk Scoring Methods and populate Criticality & Risk cards We now are going to create another type of Method, i.e. a Method of type Criticality which will feed the Criticality card on a given Asset. From the top-left Scoring menu,go to the Method tab and click Create method . Name it CL_Asset_Criticality . In the Type , select Criticality . In the Scored Assets , select the CL_Assets query as we did in section 3. Click Create . Click on the just created CL_Asset_Criticality link. Click the to-right Edit pencil. In the Formula field, just write Priority . NOTE: in this case, we are simply defining the Health Criticality score of a given Asset as the value of the Asset's Priority field - which we will populate in Maximo in next steps. We will see in next sections how more advanced formulas can be defined, where pretty much any other field associated to the given Asset in Maximo can be used. As a final step for this Criticality card, make sure you tick the Active checkbox to activate our CL_Asset_Criticality method. Let's now create a Risk Method and populate the Risk card. NOTE : Because the definition of Risk might vary from an organisation to another, this Risk Method is fully configurable. You can use these Formulas references to have an idea of what custom formulas you can construct. By default, the Risk Score in MAS-Health is defined as follows: By default, risk is calculated by dividing the remainder of the health score by 100 and then multiplying the resulting number by the criticality score. From the top-left Scoring menu, go to the Method tab and click Create method . Name it CL_Asset_Risk . In the Type , select Risk . In the Scored Assets , select the CL_Assets query as we did in section 3. Click Create . Click on the just created CL_Asset_Risk link. Click the top-right Edit pencil. In the Formula field, write IF((ISNULLF(ASSETLOCSCORE(\"health\")) || ISNULLF(ASSETLOCSCORE(\"criticality\"))), NULLVALUE(),((100-ASSETLOCSCORE(\"health\"))/100)*ASSETLOCSCORE(\"criticality\")) . That is the code translation of what we just wrote in earlier Note. Make sure you tick the Active checkbox to activate our CL_Asset_Risk method. Go back to CL_Asset_1 , open it and top-right, click Edit source aset record , that will open the asset in Maximo. There, simply enter 3 in the Priority field, click Save , go back to Health. Wait a minute (for some Manage-Health background process to complete), go back to your CL_Asset_1 , click top-rigt Recalculate Health score and observe how both your Criticality and Risk cards now display data ! 6. Populate the RUL & Age cards The Age card displays the current system date minus the installation date of an asset. The RUL card is calculated as follows: The remaining percentage of the asset's useful life. The remaining useful life (RUL) is calculated by subtracting the age from the manufacturer\u2019s expected life. If the age exceeds the expected life, the RUL is 0%. . So back to CL_Asset_1 in Maximo, simply set a value in Installation Date (set it e.g. > 5 years in the past), and a value in Expected Life (make it > 15 years). Go back to CL_Asset_1 in Health, click top-right Recalculate health score button, and ... there you go: the Age and RUL cards are now populated ! 7. Populate the Next PM & MRR cards and the Asset Timeline The Next PM card displays the time until the next scheduled preventive maintenance (PM) event. To populate it, we must therefore associate a preventive maintenance to our asset. To do that: Go back your CL_Asset_1 in Maximo. In the top-left Find Navigation Item menu, write Preventive Maintenance and click enter. That will take you to the Preventive Maintenance menu. Click the + top button to create a new Preventive Maintenance . Leave the PM ID as-is, and write CL_Asset_1_PM in the PM Description field. In the Asset field, select your CL_Asset_1 . Go to the Frequency tab. In the section Time Based Frequency , enter 3 in Frequency , and in the Estimated Next Due Date , enter a date e.g. 55 days in the future. In Find Navigation Item menu, write Change Status , click enter, and set the Status to Active , click OK. Wait a minute, then go back to CL_Asset_1 in Health. Click Recalculate health score in top-right Actions menu ... and you should now see a Next PM value ! The MRR card displays: The maintenance-to-replacement ratio (MRR) for the asset. The MRR is calculated by dividing the current total cost of all maintenance for the asset, including parts and labor, by the replacement cost. To populate it, we must therefore create work that has costs associated ! In Maximo, open CL_Asset_1 . In the left menu, click Create - Work Order , name it CL_Asset_1_WO_1 . Go to the Work tab, you will see the just created CL_Asset_1_WO_1 . Click Go To Work Order Tracking . On the opened work order, from left menu, click Change Status and set the status of the work order to Approved . Go to the Actuals tab and at the bottom of that tab, click the Select Labor button. ( NOTE : Here we expect that your Maximo instance has a least 1 existing Labor already). Select e.g. BALL . Extend the BALL row. In the Details section, enter a Start Date in the past, and enter e.g. 10 in the Regular Hours field. Note the Rate value (i.e. 22 in this case) and how the Line Cost = Hours x Rate (e.g. 220 = 22 x 10 in our case). Click Change Status and set the status of the work order to Complete . In the left menu Find Navigation Item , type then launch Run Reports . In the Reports and Schedules window that opens, navigate to the Maintenanc Cost Rollup Update . Click Create Report . On the Request Page , select a Site (e.g. =BEDFORD) and set the Schedule to Immediate . Click Submit . Finally, we can see our last card populated ! In this case, the MRR now equals 27.5% - which indeed is the result of this calculation: Total Cost / Replacement Cost = 220/800 = 27.5% . 9. Update the Health Scoring Method As a last exercise, we are going to update the Health Scoring Method we earlier defined . This will give you a glimpse at how configurable health scores are. In Health, go back to the left Scoring menu. Open the CL_Asset_Health Method and Deactivate it (top-right). Click the + top-right icon to add a new Driver . Enter Year to Date vs. Replacement Cost in the Name and tick the A custom formula tickbox. In the formula field, enter IF(ytdcost>(replacecost/50),20,20-PCT(ytdcost,replacecost)) . This is another calculation involving the Year to Date Cost and Replacement Cost associated to CL_Asset_1 . In the Best Score enter 100 , and in Worst Score enter 0 . Click Create . Similarly to what we just did, create another Driver , call it Open Work Orders . In the Custom formula field, enter count$openwo . In the Best Score enter 0 , and in Worst Score enter 5 . Click Create . On the Drivers list, click the top-right pencil, and give weights to the 3 Drivers, e.g. Meter Readings at 60% , Year to Date vs. Replacement Cost and Open Work Orders at 20% . This is what your CL_Asset_Health Drivers list should look like. Finally, come back to your CL_Asset_1 , click Recalculate Score and ... contemplate your work - well done and congratulations ! 10. [OPTIONAL] Map IoT Devices & Readings to Assets & Meter Readings In this last optional section, we will map the IoT Devices & Readings we defined in the first steps of the Monitor Lab to the Assets & Meter Readings we defined in the earlier 1. Setup initial Manage data step of this Health Lab. This will enable the automated synching of the IoT Readings to Manage Meter Readings - in this case, we will take an hourly average of the IoT readings and transform them into 1 new Meter Reading every hour. That is what will ultimately make real condition-based maintenance a true possibility ! Go to your Manage - Health integration page (typically set at: http://MANAGE-URL/maximo-x/#/administrator/integration ), and to the IoT Connector tab. On the IoT Connection Service tab, tick the IBM Maximo Asset Monitor tick-box. Click Next 3 times. NOTE: For these labs, we assume that the Configure IoT Service and Configure End Points were already set by your instructor. On the Register Device Types tab, select CL_Asset_LI (which corresponds to the Logical Interface you defined in 4. Create Physical & Logical Interfaces ). Click the Register as asset button. That will move you to the Map Data Schema page. On the CL_Asset_LI row, click the right Edit pencil. On the opened Schema tab, click Detect from a connected device and From first available . Click Get Now . Assuming data is flowing to your CL_Asset_1 device, that should populate the box below the button with a json corresponding to your IoT readings. Click Save changes . On the Device Type mappings tab, click Add Mapping button. Let's now do the associations between the IoT Device Readings and Manage Meter Readings. Click Select meter and select TEMP-C . In the IoT Device Type Property , select temperature . In the Data collection section, tick the Agregated then Detect from a connected device and From first available tick boxes. Click Get now then Save changes . Select avg (i.e. average) in the Value field, and HOUR in the Time Period field. In the Dat Synchronization section, make sure you tick Cron Task Instance Active . Repeat step 1. for the 7 other readings. Select avg for all, except for STARTS for which select count . Your final Device Type mappings tab should look like this. Finally let's associate the IoT Devices and Manage Assets. On the Associate Devices tab, click the Associate Assets sub tab. Type CL_ in the Search field. On the first row where CL_Asset = CL_Asset_1 and Meter = PRESSURE , select CL_Asset_1_LI in the Device Type column, and CL_Asset_1 in the Device ID` column. Repeat step 1. for the other 7 Readings. Do not forget to click the Save icon. That wil move you to the Manage Assets tab which should look like this.","title":"Health on Maximo Application Suite 8.3 [NEW]"},{"location":"health/health-mas/#new-health-lab-on-maximo-application-suite-83","text":"TIP : If the images seem too small to read, just right-click them, open in new tab and zoom in/out. I have tried to make all images readable with clear 1., 2., 3. etc references to the corresponding instruction steps.","title":"[NEW] HEALTH Lab on Maximo Application Suite (8.3)"},{"location":"health/health-mas/#0-prerequisites-objectives","text":"","title":"0. Prerequisites &amp; Objectives"},{"location":"health/health-mas/#prerequisites","text":"There are no prerequisites if you just plan to go till section 9. Update the Health Scoring Method - you will generate all the data that you need in this Health lab which is self-contained. But if you plan to also complete the last section 10. [OPTIONAL] Map IoT Devices & Readings to Assets & Meter Readings , then you will need to have completed the first section of the Monitor lab: 1. Generate IoT data . This is because - and that is the beauty of the fully-integrated suite - the IoT data that we created in the first Monitor Lab steps of these APM labs is the exact same data that is used in these last Health Lab steps - thus enabling true, near real-time monitoring and condition-based maintenance of your assets !","title":"Prerequisites"},{"location":"health/health-mas/#objectives","text":"In this Module you will: set up the required Assets and Meter Groups in Manage (aka Maximo) create a sample Health Scoring Method, a Criticality Method and a Risk Method in Health populate all Cards (i.e. Health Score, Criticality, Risk, RUL, Age, Next PM, MRR) on your sample CL_Asset_1 in Health [OPTIONAL] finally, associate the IoT Devices we defined in the first Monitor Lab steps of 1. Generate IoT data to the CL_Asset_1 and set up the required mappings between your IoT readings and Maximo Meter Readings. Note that in this section, we will alternatively mention Manage or Maximo - both names refer to the 1 same thing.","title":"Objectives"},{"location":"health/health-mas/#1-setup-initial-manage-data","text":"Important Note on Naming Conventions : in this lab, you will create Assets which we name here CL_Asset_1 , CL_Asset_2 etc ( CL standing for Christophe Lucas). In a classroom setting, make sure every student replaces the CL by their initials throughout the lab e.g. XY_Asset_1 , AB_Asset_1 etc.","title":"1. Setup initial Manage data"},{"location":"health/health-mas/#1-launch-manage-from-mas-suite-navigator","text":"Login to your MAS homepage. Click Launch on the Manage card. This will open Maximo in another browser tab. Login with your Maximo ID/pwd.","title":"1. Launch   Manage from MAS Suite Navigator"},{"location":"health/health-mas/#2-create-3-assets-1-query","text":"In Maximo, click the Go To Applications - Asset Menu. Click the + button to create an Asset, enter XY_Asset_1 - where XY are your initials. Note that for the rest of this lab, we will use CL_Asset_1 (e.g. CL for Christophe Lucas). CL_Asset_1 in both the Asset ID & Description fields. Click Save . Repeat this step for CL_Asset_2 and CL_Asset_3 . Click the List View menu. In the Asset field, enter CL_Asset* , click enter. This should return the list of your 3 just-created CL_Assets. Click the Save Query button, enter CL_Assets in both the Query Name & Description. Tick the Public box.","title":"2. Create 3 Assets &amp; 1 Query"},{"location":"health/health-mas/#3-create-a-meter-group","text":"In this section, we will create a Maximo Meter Group containing 8 Meters that we will later associate to the IoT readings that we defined in the first section of the MONITOR lab. In Maximo left Find Navigation Item box, enter the Meter Groups application. Click the + button to create a Meter Group, enter CL_Asset in both the Meter Group & Description fields. Click New Row and in the Meter field, click Select Value . In the Select Value window that opens, enter Temp in the Meter field, hit Enter, select TEMP-C . Repeat previous step with the following Meters : VIBRATIONH , PRESSURE , SPEED , ACCELERAT , LOAD , TORQUE , STARTS . Click the Save button. Note that, although Meters like PRESSURE often exist in Maximo installations out-of-the-box, some of the Meters appearing in step 4. might not exist in Maximo yet. In which case, do the following: (a) Go to the Meters menu via Find Navigation Item , (b) click Create new Meter, enter e.g. ACCELERAT (the maximum name length is 9 ), select GAUGE as Meter Type , then Save . That newly created Meter can now be added to the Meter Group in step 4.","title":"3. Create a Meter Group"},{"location":"health/health-mas/#4-associate-meter-group-to-assets-create-meter-readings","text":"In Maximo, click the Go To Applications - Asset Menu. In the Asset field, enter CL_Asset* , click enter. This will return the list of you 3 CL_Assets , click CL_Asset_1 . Go to On CL_Asset_1 , go to its Meters tab, click Meter Group - Select Value . In the Select Value window, CL_Asset* , click enter, select the CL_Asset Meter Group. Click Save . This has loaded all the Meters we defined in the Meter Group . In left Find Navigation item box, enter Enter M , click Enter Meter Readings . For each Meter, enter values within the ranges that we defined for the IoT readings at the beginning of the Monitor lab in 2. Create IoT Simulation . For example: TEMP-C = 37 , VIBRATIONH = 4 , PRESSURE = 22 , SPEED = 17 , ACCELERAT = 9 , LOAD = 100 , TORQUE = 12 , STARTS = 1 . Click OK . Repeat steps 1. to 3. for CL_Asset_2 and CL_Asset_3 with whatever Meter values you want.","title":"4. Associate Meter Group to Assets &amp; create Meter Readings"},{"location":"health/health-mas/#5-create-a-condition-monitoring-rule","text":"We are now going to define a Condition Monitoring rule where we will create upper and lower limits for the Meter Readings corresponding to TEMP-C , for Asset CL_Asset_1 . In Maximo, click the Go To Applications - Condition Monitoring Menu. Click the + to create a new Condition Monitoring. Name it CL_Asset . In the Point and Description fields, enter CL_Asset* . Next to the Asset field, click Select Value , search for CL_Asset_1 , select it. Next to the Meter field, click Select Value , search for TEMP-C , select it. In the Upper Warning Limit field, enter 40 , in the Lower Warning Limit field, enter 35 . In the Upper Action Limit field, enter 45 , in the Lower Action Limit field, enter 30 . Note that those values roughly correspond to the \"temperature\": random(35,40), values we originally defined in our IoT Simulation. With those limits defined, Condition Monitoring should pick-up those anomalous \"temperature\": random(46,48), we generated ! In the Upper Limit Job Pan field, click Select Value and select whatever existing Job Plan you want (we're just doing a demo here !). Do the same for Upper Limit Job Pan . Click Save . Your final screen should look like picture below.","title":"5. Create a Condition Monitoring Rule"},{"location":"health/health-mas/#2-setup-health","text":"","title":"2. Setup Health"},{"location":"health/health-mas/#1-view-your-assets-in-health","text":"From the MAS homepage, Click Launch on the Health card. Go to the top-left Assets menu. Enter CL in the Search bar. This will return the 3 Assets we just created in Maximo. Click on CL_Asset_1 , and observe the various cards that appear out-of-the-box - they are all empty for the moment. Let's populate them ! NOTE : it is normal that you see Predict in the top middle menu, even though you accessed this screen via the Health card. As you can see, Health & Predict actually appear on the same UI (i.e. Predict corresponding to the Predictions section just below the Health details section). When a user is entitled to both Predict & Health, Predict is always displayed. With a user only entitled to Health and NOT Predict, the top-middle menu would display Health.","title":"1. View your Assets in Health"},{"location":"health/health-mas/#2-create-factors-in-health-associated-to-meters-in-manage","text":"Before we create our Scoring Methods, let's first check that the Meters we associated to the 3 CL_Assets in 4. Associate Meter Group to Assets & create Meter Readings exist (or not) as Factors in Health already - if they already exist, good, if not, we'll just create them. Go to the top-left Scoring menu, then go to the Factors tab. Check which ones of the Meters you earlier defined already exist as Factors in Health, e.g. typically you will see that VIBRATIONH , TEMP-C are already defined, but NOT e.g. Speed . Let's add Speed as a Factor. On the Factors tab, click Creat Factor . Name your Factor Speed , select Meter in the Calculate a score from box. Then select Speed in the pop-up box. In the Score Normalization's Upper & Lower Limits, enter 20 & 15 (corresponding to the upper & lower limits we originally defined in 1. Create IoT Simulation ).","title":"2. Create Factors in Health associated to Meters in Manage"},{"location":"health/health-mas/#3-create-a-simple-health-scoring-method-and-associated-drivers","text":"Let's first create the Health Method itself: Via the Scoring menu, go to the Methods tab and click Create method . Name your method CL_Asset_Health , and select Health in the Type drop-box. Under the Scored Assets field, click Select and select the CL_Assets query we defined in 2. Create 3 Assets & 1 Query section. Let's now add Drivers to this Method: Staying on the CL_Asset_Health Method, click the + top-right icon to create a Driver. Name it Meter Readings , select One or more factors in the Calculate a score from tick-box. Click Create . The Meter Readings Driver now appears in the Drivers list, but is still empty. Let's add all the Factors (associated to Meter Readings) we just created to this Driver. Click the + top-right icon to select those Factors. In the opened Select factors window, select the 8 Factors relevant to our CL_Assets and click Add to driver . The 8 Factors are now added to the Meter Readings Driver. Click the top-right pencil to give a Weight to the 8 Factors. Note the total of the 8 Weights must be 100%. Enter 10% for all Factors, except for TEMP-C for which enter 30% .","title":"3. Create a simple Health Scoring Method and associated Drivers"},{"location":"health/health-mas/#4-check-your-health-score-card-and-make-it-change","text":"We are now going to first check that the Health Scoring Method we just defined results in a Health score being calculated for our CL_Assets, based on the Meter Readings we entered in earlier section . Then, we will enter new Meter Readings for CL_Asset_1 and notice that its Health Score automatically changes. Go to the top-left Assets menu. Enter CL in the Search bar. This will return the 3 CL_Assets . Select CL_Asset_1 . Notice how the Health card displays a score of 70%. Going into the Health details card, notice how you can see the values of all the Meter Readings we entered, and how, based on the Factors and Method we defined, each Meter either shows red or green. Note that you can also see all Meter Readings in the Operational status section. From Health, access Manage by clicking on the top-left IBM Maximo Application Suite banner, then by clicking the Manage card. Go to Maximo's Asset menu, enter CL* in the Asset field and click enter. This will display the 3 CL_Assets , select your CL_Asset_1 . In the Find Navigation Item menu, write Enter Meter Readings , click Enter and just enter a value of 55 for TEMP-C . This means that TEMP-C is going to move above the normal operating conditions we originally defined in the IoT Simulation (i.e. between 35 & 40 Celsius). Go back to Health. Select your CL_Asset_1 row. Top-rigt, click Recalculate Health score . Observe how your Health card gets updated from 70% (orange) to 40% (red).","title":"4. Check your Health Score card and make it change"},{"location":"health/health-mas/#5-create-criticality-risk-scoring-methods-and-populate-criticality-risk-cards","text":"We now are going to create another type of Method, i.e. a Method of type Criticality which will feed the Criticality card on a given Asset. From the top-left Scoring menu,go to the Method tab and click Create method . Name it CL_Asset_Criticality . In the Type , select Criticality . In the Scored Assets , select the CL_Assets query as we did in section 3. Click Create . Click on the just created CL_Asset_Criticality link. Click the to-right Edit pencil. In the Formula field, just write Priority . NOTE: in this case, we are simply defining the Health Criticality score of a given Asset as the value of the Asset's Priority field - which we will populate in Maximo in next steps. We will see in next sections how more advanced formulas can be defined, where pretty much any other field associated to the given Asset in Maximo can be used. As a final step for this Criticality card, make sure you tick the Active checkbox to activate our CL_Asset_Criticality method. Let's now create a Risk Method and populate the Risk card. NOTE : Because the definition of Risk might vary from an organisation to another, this Risk Method is fully configurable. You can use these Formulas references to have an idea of what custom formulas you can construct. By default, the Risk Score in MAS-Health is defined as follows: By default, risk is calculated by dividing the remainder of the health score by 100 and then multiplying the resulting number by the criticality score. From the top-left Scoring menu, go to the Method tab and click Create method . Name it CL_Asset_Risk . In the Type , select Risk . In the Scored Assets , select the CL_Assets query as we did in section 3. Click Create . Click on the just created CL_Asset_Risk link. Click the top-right Edit pencil. In the Formula field, write IF((ISNULLF(ASSETLOCSCORE(\"health\")) || ISNULLF(ASSETLOCSCORE(\"criticality\"))), NULLVALUE(),((100-ASSETLOCSCORE(\"health\"))/100)*ASSETLOCSCORE(\"criticality\")) . That is the code translation of what we just wrote in earlier Note. Make sure you tick the Active checkbox to activate our CL_Asset_Risk method. Go back to CL_Asset_1 , open it and top-right, click Edit source aset record , that will open the asset in Maximo. There, simply enter 3 in the Priority field, click Save , go back to Health. Wait a minute (for some Manage-Health background process to complete), go back to your CL_Asset_1 , click top-rigt Recalculate Health score and observe how both your Criticality and Risk cards now display data !","title":"5. Create Criticality &amp; Risk Scoring Methods and populate Criticality &amp; Risk cards"},{"location":"health/health-mas/#6-populate-the-rul-age-cards","text":"The Age card displays the current system date minus the installation date of an asset. The RUL card is calculated as follows: The remaining percentage of the asset's useful life. The remaining useful life (RUL) is calculated by subtracting the age from the manufacturer\u2019s expected life. If the age exceeds the expected life, the RUL is 0%. . So back to CL_Asset_1 in Maximo, simply set a value in Installation Date (set it e.g. > 5 years in the past), and a value in Expected Life (make it > 15 years). Go back to CL_Asset_1 in Health, click top-right Recalculate health score button, and ... there you go: the Age and RUL cards are now populated !","title":"6. Populate the RUL &amp; Age cards"},{"location":"health/health-mas/#7-populate-the-next-pm-mrr-cards-and-the-asset-timeline","text":"The Next PM card displays the time until the next scheduled preventive maintenance (PM) event. To populate it, we must therefore associate a preventive maintenance to our asset. To do that: Go back your CL_Asset_1 in Maximo. In the top-left Find Navigation Item menu, write Preventive Maintenance and click enter. That will take you to the Preventive Maintenance menu. Click the + top button to create a new Preventive Maintenance . Leave the PM ID as-is, and write CL_Asset_1_PM in the PM Description field. In the Asset field, select your CL_Asset_1 . Go to the Frequency tab. In the section Time Based Frequency , enter 3 in Frequency , and in the Estimated Next Due Date , enter a date e.g. 55 days in the future. In Find Navigation Item menu, write Change Status , click enter, and set the Status to Active , click OK. Wait a minute, then go back to CL_Asset_1 in Health. Click Recalculate health score in top-right Actions menu ... and you should now see a Next PM value ! The MRR card displays: The maintenance-to-replacement ratio (MRR) for the asset. The MRR is calculated by dividing the current total cost of all maintenance for the asset, including parts and labor, by the replacement cost. To populate it, we must therefore create work that has costs associated ! In Maximo, open CL_Asset_1 . In the left menu, click Create - Work Order , name it CL_Asset_1_WO_1 . Go to the Work tab, you will see the just created CL_Asset_1_WO_1 . Click Go To Work Order Tracking . On the opened work order, from left menu, click Change Status and set the status of the work order to Approved . Go to the Actuals tab and at the bottom of that tab, click the Select Labor button. ( NOTE : Here we expect that your Maximo instance has a least 1 existing Labor already). Select e.g. BALL . Extend the BALL row. In the Details section, enter a Start Date in the past, and enter e.g. 10 in the Regular Hours field. Note the Rate value (i.e. 22 in this case) and how the Line Cost = Hours x Rate (e.g. 220 = 22 x 10 in our case). Click Change Status and set the status of the work order to Complete . In the left menu Find Navigation Item , type then launch Run Reports . In the Reports and Schedules window that opens, navigate to the Maintenanc Cost Rollup Update . Click Create Report . On the Request Page , select a Site (e.g. =BEDFORD) and set the Schedule to Immediate . Click Submit . Finally, we can see our last card populated ! In this case, the MRR now equals 27.5% - which indeed is the result of this calculation: Total Cost / Replacement Cost = 220/800 = 27.5% .","title":"7. Populate the Next PM &amp; MRR cards and the Asset Timeline"},{"location":"health/health-mas/#9-update-the-health-scoring-method","text":"As a last exercise, we are going to update the Health Scoring Method we earlier defined . This will give you a glimpse at how configurable health scores are. In Health, go back to the left Scoring menu. Open the CL_Asset_Health Method and Deactivate it (top-right). Click the + top-right icon to add a new Driver . Enter Year to Date vs. Replacement Cost in the Name and tick the A custom formula tickbox. In the formula field, enter IF(ytdcost>(replacecost/50),20,20-PCT(ytdcost,replacecost)) . This is another calculation involving the Year to Date Cost and Replacement Cost associated to CL_Asset_1 . In the Best Score enter 100 , and in Worst Score enter 0 . Click Create . Similarly to what we just did, create another Driver , call it Open Work Orders . In the Custom formula field, enter count$openwo . In the Best Score enter 0 , and in Worst Score enter 5 . Click Create . On the Drivers list, click the top-right pencil, and give weights to the 3 Drivers, e.g. Meter Readings at 60% , Year to Date vs. Replacement Cost and Open Work Orders at 20% . This is what your CL_Asset_Health Drivers list should look like. Finally, come back to your CL_Asset_1 , click Recalculate Score and ... contemplate your work - well done and congratulations !","title":"9. Update the Health Scoring Method"},{"location":"health/health-mas/#10-optional-map-iot-devices-readings-to-assets-meter-readings","text":"In this last optional section, we will map the IoT Devices & Readings we defined in the first steps of the Monitor Lab to the Assets & Meter Readings we defined in the earlier 1. Setup initial Manage data step of this Health Lab. This will enable the automated synching of the IoT Readings to Manage Meter Readings - in this case, we will take an hourly average of the IoT readings and transform them into 1 new Meter Reading every hour. That is what will ultimately make real condition-based maintenance a true possibility ! Go to your Manage - Health integration page (typically set at: http://MANAGE-URL/maximo-x/#/administrator/integration ), and to the IoT Connector tab. On the IoT Connection Service tab, tick the IBM Maximo Asset Monitor tick-box. Click Next 3 times. NOTE: For these labs, we assume that the Configure IoT Service and Configure End Points were already set by your instructor. On the Register Device Types tab, select CL_Asset_LI (which corresponds to the Logical Interface you defined in 4. Create Physical & Logical Interfaces ). Click the Register as asset button. That will move you to the Map Data Schema page. On the CL_Asset_LI row, click the right Edit pencil. On the opened Schema tab, click Detect from a connected device and From first available . Click Get Now . Assuming data is flowing to your CL_Asset_1 device, that should populate the box below the button with a json corresponding to your IoT readings. Click Save changes . On the Device Type mappings tab, click Add Mapping button. Let's now do the associations between the IoT Device Readings and Manage Meter Readings. Click Select meter and select TEMP-C . In the IoT Device Type Property , select temperature . In the Data collection section, tick the Agregated then Detect from a connected device and From first available tick boxes. Click Get now then Save changes . Select avg (i.e. average) in the Value field, and HOUR in the Time Period field. In the Dat Synchronization section, make sure you tick Cron Task Instance Active . Repeat step 1. for the 7 other readings. Select avg for all, except for STARTS for which select count . Your final Device Type mappings tab should look like this. Finally let's associate the IoT Devices and Manage Assets. On the Associate Devices tab, click the Associate Assets sub tab. Type CL_ in the Search field. On the first row where CL_Asset = CL_Asset_1 and Meter = PRESSURE , select CL_Asset_1_LI in the Device Type column, and CL_Asset_1 in the Device ID` column. Repeat step 1. for the other 7 Readings. Do not forget to click the Save icon. That wil move you to the Manage Assets tab which should look like this.","title":"10. [OPTIONAL] Map IoT Devices &amp; Readings to Assets &amp; Meter Readings"},{"location":"health/health/","text":"[Page last updated on 18 February 2021] HEALTH Lab on Maximo Asset Health Insights 7.6.1 Before you begin: You must have completed the 1. Generate IoT data section of the MONITOR lab before starting this HEALTH lab. Note that it is not required to have completed the second 2. Monitor IoT data section to go on here. 0. Objectives In this Module you will: set up the required Assets and Meter Groups in Maximo, register your IoT Devices and associate them to Maximo Assets and set up the required mappings between your IoT readings and Maximo Assets Meter readings. create a sample Scoring Method to view the health of your Assets create a final dashboard and retrospect on the data that we have been using since the start. 1. Setup Assets, Meters & Condition Monitoring in Maximo 1. Create 3 Assets & 1 Query in Maximo In Maximo, click the Go To Applications - Asset Menu. Click the + button to create an Asset, enter CL_Asset_1 in both the Asset ID & Description fields. Click Save . Repeat this step for CL_Asset_2 and CL_Asset_3 . Click the List View menu. In the Asset field, enter CL_Asset* , click enter. This should return the list of your 3 just-created CL_Assets . Click the Save Query button, enter CL_Assets in both the Query Name & Description . Tick the Public box. 2. Create a Meter Group In this section, we will create a maximo Meter Group containing 8 Meters that we will later associate to the IoT readings that we defined in the first section of the MONITOR lab. In Maximo to-left Find Navigation Item box, enter the Meter Groups application. Click the + button to create a Meter Group, enter CL_Asset in both the Meter Group & Description fields. Click New Row and in the Meter field, click Select Value . In the Select Value window that opens, enter Temp in the Meter field, hit Enter, select TEMP-C . Repeat previous step with the following Meters : VIBRATIONH , PRESSURE , SPEED , ACCELERAT , LOAD , TORQUE , STARTS . Click the Save button. Note that, although Meters like PRESSURE often exist in Maximo installations out-of-the-box, some of the Meters appearing in step 4. might not exist in Maximo yet. In which case, do the following: (a) Go to the Meters menu via Find Navigation Item , (b) click Create new Meter, enter e.g. ACCELERAT (the maximum name length is 9 ), select GAUGE as Meter Type , then Save . That newly created Meter can now be added to the Meter Group in step 4. 3. Associate Meter Group to Assets & create Meter Readings In Maximo, click the Go To Applications - Asset Menu. In the Asset field, enter CL_Asset* , click enter. This will return the list of you 3 CL_Assets , click CL_Asset_1 . Go to On CL_Asset_1 , go to its Meters tab, click Meter Group - Select Value . In the Select Value window, CL_Asset* , click enter, select the CL_Asset Meter Group. Click Save . This has loaded all the Meters we defined in the Meter Group . In left Find Navigation item box, enter Enter M , click Enter Meter Readings . For each Meter, enter values within the ranges that we defined for the IoT readings at the beginning of the Monitor lab in 2. Create IoT Simulation . For example: TEMP-C = 37 , VIBRATIONH = 4 , PRESSURE = 22 , SPEED = 17 , ACCELERAT = 9 , LOAD = 100 , TORQUE = 12 , STARTS = 1 . Click OK . Repeat steps 1. to 3. for CL_Asset_2 and CL_Asset_3 with whatever Meter values you want. 4. Create a Condition Monitoring Rule We are now going to create a Condition Monitoring rule. The ultimate idea here is that we will create upper and lower limits for the Meter Readings which, when passed, can automatically trigger work orders. Because we will later tie our original IoT readings from the Watson IoT Platform to Meter readings in Maximo , this will literally allow us to move towards a real Condition Based maintenance regime ! In this exercise, we will create such a rule for just 1 Asset ( CL_Asset_1 ) and 1 reading ( TEMP-C ), but you can of course create more rules for other Assets and/or other readings. In Maximo, click the Go To Applications - Condition Monitoring Menu. Click the + to create a new Condition Monitoring. Name it CL_Asset . In the Point and Description fields, enter CL_Asset* . Next to the Asset field, click Select Value , search for CL_Asset_1 , select it. Next to the Meter field, click Select Value , search for TEMP-C , select it. In the Upper Warning Limit field, enter 40 , in the Lower Warning Limit field, enter 35 . In the Upper Action Limit field, enter 45 , in the Lower Action Limit field, enter 30 . Note that those values roughly correspond to the \"temperature\": random(35,40), values we originally defined in our IoT Simulation. With those limits defined, Condition Monitoring should pick-up those anomalous \"temperature\": random(46,48), we generated ! In the Upper Limit Job Pan field, click Select Value and select whatever existing Job Plan you want (we're just doing a demo here !). Do the same for Upper Limit Job Pan . Click Save . Your final screen should look like picture below. 2. Map IoT Devices & Readings to Maximo Assets & Meters 1. Register IoT Device Type as an Asset [As earlier mentioned, this step assumes that the integration between the Watson IoT Platform and Maximo Reliability Engineer work centre exists. If not, here are the Integration Setup Instructions ] . In the left Find Navigation item box, enter Rel , click Reliability Engineer . This will open the Reliability Engineer work centre. In the left menu, click Integration . Click Next 3 times through the Select IoT Service then Configure IoT Service then Configure End Points then Register Device Types . On the Register Device Types page, select CL_Asset , click Register as Asset then Next . This will take you to the Map Data Schema page. 2. Map IoT Readings to Maximo Meters On the first Schema tab of the Map Data Schema page, tick Detect from a connected device and From first available then click Get now . If your IoT Simulation is still running, this will return a .json string similar to this: {\"acceleration\":10,\"load\":99,\"temperature\":39,\"torque\":14,\"pressure\":22,\"vibration\":2,\"starts\":86,\"speed\":19} . If that string is not returned (because e.g. your IoT Simulation is not running at this time), you can manually enter this value in the field. Click Save then switch to the Device Type Mappings tab . Click Add Mapping , then Select Meter . Find and select TEMP-C - that's the Maximo Meter . On the IoT Device Type Property , select temperature - that's the IoT Reading . In the Data Collection section, tick Aggregated with Value = AVG and Time Period = Hour . This means that once every hour, a Meter reading will be created with a value equal to the average of your IoT Readings for the past hour. Repeat steps 2. to 3. for the other readings, i.e. VIBRATIONH , PRESSURE , SPEED , ACCELERAT , LOAD , TORQUE . For STARTS , select COUNT instead of AVG . 3. Associate IoT Devices to Maximo Assets Move to the Associate Devices top-menu. On the first Associate Assets tab, filter on CL_Asset . This will display 1 row for each Asset and Meter , i.e. 8 rows per Asset. On all CL_Asset_1 rows, click the Device Type column, select CL_Asset , then on the next column, select CL_Asset_1 . Repeat step 1. for all other rows corresponding to CL_Asset_2 and CL_Asset_3 . Do not forget to click Save . Once that is done, those 24 rows will have moved to the Manage Assets . 3. Create Scoring Method and Dashboard 1. Create required Scoring Factors Note that in most Maximo installations, some of the Meters like e.g. TEMP-C might already be defined as Scoring Factors . However, the Meters that we defined in 2. Create a Meter Group do not exist as Scoring Factors yet and we will define them in this. We will just use the sample of the Torque Meter here. Go to the left Scoring menu. Click on the Scoring Factors . Check which ones of the 8 Meters we defined already exist here. For each one which does not exist, click Create Factor . In the page that opens, click Select Meter , and search for e.g. Torque and click. Enter Torque in Factor Name . In the High Threshold , enter 15 , and in the Low Threshold , enter 10 . These threshold values are close to the range of the readings we defined for the associated IoT Reading in our initial IoT Simulation. Tick the Use Condition Monitoring ? box and click Save . Repeat this steps for all other Meters which do exist as a Scoring Factor yet. 2. Create Scoring Method In the Health part of APM, we want to provide reliability engineers and maintenance professionals with a near real-time visibility of the health of their Assets. The health of an Asset is defined by a configurable Health Score . In this exercise, we will define a Scoring Method for the 3 CL_Assets we created. A Scoring Method is defined by a 100% mix of 1 or n Drivers , each Driver being made of 1 or n Scoring Factors , each Scoring Factor corresponding to a Meter Reading value, and each Driver having a Weight expressed in %. Click the Scoring Methods tab and click the top-right Create Method . Tick the Multiple Drivers box and Next . In the Method ID and Description fields, write CL_Asset , click Next . In the Select Query field, search and click our earlier created CL_Asset query - you will see our 3 CL_Assets appear, click Next . In the Best Score enter 100 , in the Worst Score enter 0 . Click Save . Let's now build this CL_Asset Scoring Method: Click the CL_Asset scoring method you just created. Click Create Driver . In Driver Name , enter Temperature, Vibration & Pressure . In the Weight field, enter 60 . Tick the Use Factors? box. Click Select Factors . One by one, search and select the following factors and give them the following weight : TEMP-C = 60 , VIBRATIONH = 20, PRESSURE = 20 . Keep the Zero Override unticked. Click Save . Repeat steps 1. and 2. for (a) a Driver called Speed & Accleration (weight at 20) with the following Factors and associated Weight : SPEED = 50 and ACCELERAT = 50 , (b) a Driver called Torque, Load & Starts (weight at 20) with the following Factors and associated Weight : LOAD = 25 and TORQUE = 50 and STARTS = 25 . Back to the Scoring Methods menu, make sure you click the Active tick next to CL_Asset . 2. Create a new Card and contemplate your great work ! Go to the Health left menu, and on the top-right, click Add Card . In Insight App , select Asset . In Insight Type , select Saved Query . In Insight Content , select your earlier created CL_Assets query. Click Save . This will create a new CL_Assets card, open it. This screen will list your 3 CL_Assets on the left, each with a Health Score , and provide a Health Summary of your 'fleet of assets' on the right. Click CL_Asset_1 . First watch the Asset Health tab which details the 3 Drivers and associated Factors we created in the previous exercise. NOTE: if no score appears here on the first time, click Refresh Score and wait a couple seconds. Move to the Meter Reading tab. Observe that he TEMP_C Factor for which we defined a Condition Monitoring rule earlier is coloured. Click TEMP-C factor and Vie Selected Meter . In the Meter History , click Week or Day and wait a couple seconds. You can zoom in and out by using your mouse and 'drawing rectangles'. Notice several things here: (a) the red and orange lines correspond to the Condition Monitoring rules we defined here , (b) the green dots correspond to the Maximo Meter Readings we entered here , (c) the black lines actually are ... those same IoT readings we generated in the first steps of our MONITOR lab ! As a final step, just remind yourself of how really integrated all this was: the anomalous IoT readings that we created and saw in the Watson IoT Platform on 30 November 2020, around 04:50 PM, were spotted by the Anomaly Detection functions that we created in Monitor, and are visible, finally, in this last HEALTH screen. Congratulations, again - you are now DONE with the HEALTH lab ! Do not hesitate to re-do all by creating your own assets, readings, anomalies, dashboards etc and by bringing your twists in ...","title":"Maximo Asset Health Insights 7.6.1"},{"location":"health/health/#health-lab-on-maximo-asset-health-insights-761","text":"Before you begin: You must have completed the 1. Generate IoT data section of the MONITOR lab before starting this HEALTH lab. Note that it is not required to have completed the second 2. Monitor IoT data section to go on here.","title":"HEALTH Lab on Maximo Asset Health Insights 7.6.1"},{"location":"health/health/#0-objectives","text":"In this Module you will: set up the required Assets and Meter Groups in Maximo, register your IoT Devices and associate them to Maximo Assets and set up the required mappings between your IoT readings and Maximo Assets Meter readings. create a sample Scoring Method to view the health of your Assets create a final dashboard and retrospect on the data that we have been using since the start.","title":"0. Objectives"},{"location":"health/health/#1-setup-assets-meters-condition-monitoring-in-maximo","text":"","title":"1. Setup Assets, Meters &amp; Condition Monitoring in Maximo"},{"location":"health/health/#1-create-3-assets-1-query-in-maximo","text":"In Maximo, click the Go To Applications - Asset Menu. Click the + button to create an Asset, enter CL_Asset_1 in both the Asset ID & Description fields. Click Save . Repeat this step for CL_Asset_2 and CL_Asset_3 . Click the List View menu. In the Asset field, enter CL_Asset* , click enter. This should return the list of your 3 just-created CL_Assets . Click the Save Query button, enter CL_Assets in both the Query Name & Description . Tick the Public box.","title":"1. Create 3 Assets &amp; 1 Query in Maximo"},{"location":"health/health/#2-create-a-meter-group","text":"In this section, we will create a maximo Meter Group containing 8 Meters that we will later associate to the IoT readings that we defined in the first section of the MONITOR lab. In Maximo to-left Find Navigation Item box, enter the Meter Groups application. Click the + button to create a Meter Group, enter CL_Asset in both the Meter Group & Description fields. Click New Row and in the Meter field, click Select Value . In the Select Value window that opens, enter Temp in the Meter field, hit Enter, select TEMP-C . Repeat previous step with the following Meters : VIBRATIONH , PRESSURE , SPEED , ACCELERAT , LOAD , TORQUE , STARTS . Click the Save button. Note that, although Meters like PRESSURE often exist in Maximo installations out-of-the-box, some of the Meters appearing in step 4. might not exist in Maximo yet. In which case, do the following: (a) Go to the Meters menu via Find Navigation Item , (b) click Create new Meter, enter e.g. ACCELERAT (the maximum name length is 9 ), select GAUGE as Meter Type , then Save . That newly created Meter can now be added to the Meter Group in step 4.","title":"2. Create a Meter Group"},{"location":"health/health/#3-associate-meter-group-to-assets-create-meter-readings","text":"In Maximo, click the Go To Applications - Asset Menu. In the Asset field, enter CL_Asset* , click enter. This will return the list of you 3 CL_Assets , click CL_Asset_1 . Go to On CL_Asset_1 , go to its Meters tab, click Meter Group - Select Value . In the Select Value window, CL_Asset* , click enter, select the CL_Asset Meter Group. Click Save . This has loaded all the Meters we defined in the Meter Group . In left Find Navigation item box, enter Enter M , click Enter Meter Readings . For each Meter, enter values within the ranges that we defined for the IoT readings at the beginning of the Monitor lab in 2. Create IoT Simulation . For example: TEMP-C = 37 , VIBRATIONH = 4 , PRESSURE = 22 , SPEED = 17 , ACCELERAT = 9 , LOAD = 100 , TORQUE = 12 , STARTS = 1 . Click OK . Repeat steps 1. to 3. for CL_Asset_2 and CL_Asset_3 with whatever Meter values you want.","title":"3. Associate Meter Group to Assets &amp; create Meter Readings"},{"location":"health/health/#4-create-a-condition-monitoring-rule","text":"We are now going to create a Condition Monitoring rule. The ultimate idea here is that we will create upper and lower limits for the Meter Readings which, when passed, can automatically trigger work orders. Because we will later tie our original IoT readings from the Watson IoT Platform to Meter readings in Maximo , this will literally allow us to move towards a real Condition Based maintenance regime ! In this exercise, we will create such a rule for just 1 Asset ( CL_Asset_1 ) and 1 reading ( TEMP-C ), but you can of course create more rules for other Assets and/or other readings. In Maximo, click the Go To Applications - Condition Monitoring Menu. Click the + to create a new Condition Monitoring. Name it CL_Asset . In the Point and Description fields, enter CL_Asset* . Next to the Asset field, click Select Value , search for CL_Asset_1 , select it. Next to the Meter field, click Select Value , search for TEMP-C , select it. In the Upper Warning Limit field, enter 40 , in the Lower Warning Limit field, enter 35 . In the Upper Action Limit field, enter 45 , in the Lower Action Limit field, enter 30 . Note that those values roughly correspond to the \"temperature\": random(35,40), values we originally defined in our IoT Simulation. With those limits defined, Condition Monitoring should pick-up those anomalous \"temperature\": random(46,48), we generated ! In the Upper Limit Job Pan field, click Select Value and select whatever existing Job Plan you want (we're just doing a demo here !). Do the same for Upper Limit Job Pan . Click Save . Your final screen should look like picture below.","title":"4. Create a Condition Monitoring Rule"},{"location":"health/health/#2-map-iot-devices-readings-to-maximo-assets-meters","text":"","title":"2. Map IoT Devices &amp; Readings to Maximo Assets &amp; Meters"},{"location":"health/health/#1-register-iot-device-type-as-an-asset","text":"[As earlier mentioned, this step assumes that the integration between the Watson IoT Platform and Maximo Reliability Engineer work centre exists. If not, here are the Integration Setup Instructions ] . In the left Find Navigation item box, enter Rel , click Reliability Engineer . This will open the Reliability Engineer work centre. In the left menu, click Integration . Click Next 3 times through the Select IoT Service then Configure IoT Service then Configure End Points then Register Device Types . On the Register Device Types page, select CL_Asset , click Register as Asset then Next . This will take you to the Map Data Schema page.","title":"1. Register IoT Device Type as an Asset"},{"location":"health/health/#2-map-iot-readings-to-maximo-meters","text":"On the first Schema tab of the Map Data Schema page, tick Detect from a connected device and From first available then click Get now . If your IoT Simulation is still running, this will return a .json string similar to this: {\"acceleration\":10,\"load\":99,\"temperature\":39,\"torque\":14,\"pressure\":22,\"vibration\":2,\"starts\":86,\"speed\":19} . If that string is not returned (because e.g. your IoT Simulation is not running at this time), you can manually enter this value in the field. Click Save then switch to the Device Type Mappings tab . Click Add Mapping , then Select Meter . Find and select TEMP-C - that's the Maximo Meter . On the IoT Device Type Property , select temperature - that's the IoT Reading . In the Data Collection section, tick Aggregated with Value = AVG and Time Period = Hour . This means that once every hour, a Meter reading will be created with a value equal to the average of your IoT Readings for the past hour. Repeat steps 2. to 3. for the other readings, i.e. VIBRATIONH , PRESSURE , SPEED , ACCELERAT , LOAD , TORQUE . For STARTS , select COUNT instead of AVG .","title":"2. Map IoT Readings to Maximo Meters"},{"location":"health/health/#3-associate-iot-devices-to-maximo-assets","text":"Move to the Associate Devices top-menu. On the first Associate Assets tab, filter on CL_Asset . This will display 1 row for each Asset and Meter , i.e. 8 rows per Asset. On all CL_Asset_1 rows, click the Device Type column, select CL_Asset , then on the next column, select CL_Asset_1 . Repeat step 1. for all other rows corresponding to CL_Asset_2 and CL_Asset_3 . Do not forget to click Save . Once that is done, those 24 rows will have moved to the Manage Assets .","title":"3. Associate IoT Devices to Maximo Assets"},{"location":"health/health/#3-create-scoring-method-and-dashboard","text":"","title":"3. Create Scoring Method and Dashboard"},{"location":"health/health/#1-create-required-scoring-factors","text":"Note that in most Maximo installations, some of the Meters like e.g. TEMP-C might already be defined as Scoring Factors . However, the Meters that we defined in 2. Create a Meter Group do not exist as Scoring Factors yet and we will define them in this. We will just use the sample of the Torque Meter here. Go to the left Scoring menu. Click on the Scoring Factors . Check which ones of the 8 Meters we defined already exist here. For each one which does not exist, click Create Factor . In the page that opens, click Select Meter , and search for e.g. Torque and click. Enter Torque in Factor Name . In the High Threshold , enter 15 , and in the Low Threshold , enter 10 . These threshold values are close to the range of the readings we defined for the associated IoT Reading in our initial IoT Simulation. Tick the Use Condition Monitoring ? box and click Save . Repeat this steps for all other Meters which do exist as a Scoring Factor yet.","title":"1. Create required Scoring Factors"},{"location":"health/health/#2-create-scoring-method","text":"In the Health part of APM, we want to provide reliability engineers and maintenance professionals with a near real-time visibility of the health of their Assets. The health of an Asset is defined by a configurable Health Score . In this exercise, we will define a Scoring Method for the 3 CL_Assets we created. A Scoring Method is defined by a 100% mix of 1 or n Drivers , each Driver being made of 1 or n Scoring Factors , each Scoring Factor corresponding to a Meter Reading value, and each Driver having a Weight expressed in %. Click the Scoring Methods tab and click the top-right Create Method . Tick the Multiple Drivers box and Next . In the Method ID and Description fields, write CL_Asset , click Next . In the Select Query field, search and click our earlier created CL_Asset query - you will see our 3 CL_Assets appear, click Next . In the Best Score enter 100 , in the Worst Score enter 0 . Click Save . Let's now build this CL_Asset Scoring Method: Click the CL_Asset scoring method you just created. Click Create Driver . In Driver Name , enter Temperature, Vibration & Pressure . In the Weight field, enter 60 . Tick the Use Factors? box. Click Select Factors . One by one, search and select the following factors and give them the following weight : TEMP-C = 60 , VIBRATIONH = 20, PRESSURE = 20 . Keep the Zero Override unticked. Click Save . Repeat steps 1. and 2. for (a) a Driver called Speed & Accleration (weight at 20) with the following Factors and associated Weight : SPEED = 50 and ACCELERAT = 50 , (b) a Driver called Torque, Load & Starts (weight at 20) with the following Factors and associated Weight : LOAD = 25 and TORQUE = 50 and STARTS = 25 . Back to the Scoring Methods menu, make sure you click the Active tick next to CL_Asset .","title":"2. Create Scoring Method"},{"location":"health/health/#2-create-a-new-card-and-contemplate-your-great-work","text":"Go to the Health left menu, and on the top-right, click Add Card . In Insight App , select Asset . In Insight Type , select Saved Query . In Insight Content , select your earlier created CL_Assets query. Click Save . This will create a new CL_Assets card, open it. This screen will list your 3 CL_Assets on the left, each with a Health Score , and provide a Health Summary of your 'fleet of assets' on the right. Click CL_Asset_1 . First watch the Asset Health tab which details the 3 Drivers and associated Factors we created in the previous exercise. NOTE: if no score appears here on the first time, click Refresh Score and wait a couple seconds. Move to the Meter Reading tab. Observe that he TEMP_C Factor for which we defined a Condition Monitoring rule earlier is coloured. Click TEMP-C factor and Vie Selected Meter . In the Meter History , click Week or Day and wait a couple seconds. You can zoom in and out by using your mouse and 'drawing rectangles'. Notice several things here: (a) the red and orange lines correspond to the Condition Monitoring rules we defined here , (b) the green dots correspond to the Maximo Meter Readings we entered here , (c) the black lines actually are ... those same IoT readings we generated in the first steps of our MONITOR lab ! As a final step, just remind yourself of how really integrated all this was: the anomalous IoT readings that we created and saw in the Watson IoT Platform on 30 November 2020, around 04:50 PM, were spotted by the Anomaly Detection functions that we created in Monitor, and are visible, finally, in this last HEALTH screen. Congratulations, again - you are now DONE with the HEALTH lab ! Do not hesitate to re-do all by creating your own assets, readings, anomalies, dashboards etc and by bringing your twists in ...","title":"2. Create a new Card and contemplate your great work !"},{"location":"monitor/monitor/","text":"[Page last updated on 06 May 2021] MONITOR Lab Before you begin: Log into your Monitor instance using your IBM ID and the environment details provided by the instructor. 0. Objectives In this Module you will: Generate the IoT data that will be used throughout the labs: Create a Device Type and 3 Devices of that Type Generate IoT data for those 3 Devices using an IoT simulation Create Physical & Logical interfaces to send the IoT data to the Monitor data lake Visualise the IoT data in a Watson IoT Platform simple dashboard Monitor that data, detect anomalies, create alerts and dashboards: Verify that the IoT data made it to the Monitor data lake Create a simple dashboard displaying the IoT data Create anomalous IoT readings during a short period of time and create anomaly detection functions that will pick them up [OPTIONAL] be directed to another deep-dive lab to understand the ins and outs of Anomaly Detection Create Alerts based on the anomaly scores Understand how to create advanced dashboards 1. Generate IoT data 1. Create Device Type & 3 Devices Let's first create a Device Type . From your Monitor Instance Home page, click Connect Devices On the opened Connect menu, click Open Platform Service application in the top-right corner. This will launch the associated Watson IoT Platform in a separate browser tab. Go to the Device Types menu, and click Add Device Type . Enter XY_Asset in the Name and Description fields - where XY are your initials. Note that for the rest of this lab, we will use CL_Asset (e.g. CL for Christophe Lucas). Click Next . On the next Metadata page, enter CL in Model and Manufacturer fields, and enter CL_Asset in Device Class field. The reason why we want to enter values here is to later show how Dimensions can be used in Monitor to slide and dice the data. Click Finish . Now, let's create 3 Devices of type CL_Asset . Stay in the Watson IoT Platform , go to the Browse menu and click Add Device . On the identity page, select your just-created CL_Asset as Entity Type and enter CL_Asset_1 in Device ID . Click Next . On the Device Information page, accept the defaults, click Next . On the Security page, accept the defaults, click Next . On the Summary page, accept the defaults, click Finish . Click Back , and repeat above steps 1. to 5. for 2 more Assets: CL_Asset_2 and CL_Asset_3 . Finally, go to the Browse menu, enter CL_Asset in the Search field, and you will now see your 3 Devices. You have now created the required CL_Asset Device Type and the 3 CL_Asset_1 , CL_Asset_2 and CL_Asset_3 Devices that we will use throughout the labs. 2. Create IoT Simulation Let's now send data to those 3 Devices ! Using the Watson IoT Platform IoT Simulation capabilities, it is possible to simulate a device and its IoT readings - exactly as if it was a real IoT device really connected to the platform and sending real IoT readings. We are going to use this great functionality as it allows one to literally simulate any asset (e.g. Pump, Engine, Truck, Conveyor Belt - you name it !), any IoT readings and do any demo. For this Lab, we will simulate our 3 CL_Asset_1_2_3 Devices generating the following IoT readings: temperature , vibration , pressure , speed , acceleration , load , torque , starts . You can of course change the IoT reading names and/or their values to fit your demo needs. First of all, make sure that in your Watson IoT Platform , Settings menu, the Activate Device Simulator is ON. Once that is done, you will see a little box in bottom-right of your screen showing 0 Simulation . Click on that 0 Simulation bottom-right box, and click Create Simulation . In the Select or create a device type box, select the CL_Asset device type you earlier created. That will open a window as you can see in picture below. In Event type name , enter CLA . in the Schedule field, enter 4 Every Minute . In the Payload field, copy-paste the following .json code. Make sure at this stage that the Store events in the data lake box remains unchecked ! Click Save . Click Use Registered Device , enter CL_Asset in the Pick Device box, select CL_Asset_1 . Repeat for CL_Asset_2 and CL_Asset_3 . You should now start seeing Events flowing in the bottom Events box. Note that the values in the random(35,40) functions can be considered being the 'standard operating conditions' for the given IoT reading. Later on in the lab, we will change those value ranges for short periods of time (i.e. change the temperature ranges from random(35,40) to random(46,49) ) and show how Monitor's out-of-the-box anomaly functions can automatically spot these 'anomalies' which are deviations from the 'standard operating conditions'. { \"temperature\": random(35,40), \"vibration\": random(1,5), \"pressure\": random(20,25), \"speed\": random(15,20), \"acceleration\": random(8,10), \"load\": random(90,110), \"torque\": random(12,14), \"starts\": increment(1,1) } The below pictures shows the 6 previous steps. Great, you now have your 3 CL_Asset_1_2_3 Devices generating IoT readings 4 times every minute. Let's check those readings on a Dashboard. 3. Create Watson IoT Platform Dashboard Let's create a Dashboard so we can see the simulated IoT readings for 1 of our devices: CL_Asset_1 . This Dashboard will allow us to clearly visualise the anomalies earlier mentioned. Still in the Watson IoT Platform , click on the Boards menu. Click Create New Board . Name the Board CL_Asset IoT Readings Dashobard . Click Next then Submit . Open the Board. Let's first create a small card which displays the 8 IoT Readings we simulated, getting updated every 15 seconds. Click Add New Card . Select All device properties then CL_Asset_1 , then Next then Submit . Let's now create a card which shows the flow of data. Click Add New Card . Click Line Chart , then select CL_Asset_1 . Click Connect data set . In the event field, select CLA (that is the name of the IoT Simulation we created earlier), then in the Property select temperature . Repeat this for a couple more properties, e.g. vibration and pressure . Click Next , select the XL size, click Next then Submit . Drag and drop the second card next to the first one. Play with the 5 minutes to 24 hours views. 4. Create Physical & Logical Interfaces So far, we have only generated simulated IoT data. What Monitor uses for all its visualisations and calculations is the data from the data lake . Monitor's data lake is being populated through the use of Physical & Logical interfaces. Let's create those interfaces and populate that data lake ! First let's create the Physical Interface . Still in the Watson IoT Platform , go to the Device Types menu, search then select CL_Asset , then click on the Interface menu. Click Create Physical Interface . Leave the default name CL_Asset_PI , click Next . Click Create event type . Wait 15 seconds or click Use Last Event Cache and you will see the CLA (which corresponds to the IoT Simulation we earlier created) event appear. Click that event, click Add . Cick Done . Let's now create the Logical Interface . Click Create Logical Interface . Leave the default name CL_Asset_LI , click Next . Click Add Property , Select the temperature , click Save . Repeat this for the 7 other IoT readings. Make sure you tick the Allow Additional Properties ON, as that would allow you to add more readings in the future if you wish. Click Next , click no event notifications and change it to All events . Click Apply , then Done . Click Activate twice. 5. Take a break and let some magic happen ... Brilliant ! You have created all that is needed to start monitoring your own IoT data. In the next module, we will check that your data lake is now populated. But first take a break (count 15 minutes at least, but I recommend several hours as all the following reports will show more data), because: some background job needs to run to populate your data lake with your IoT data, via the logical interface you just created. it is good for the IoT Simulation to keep running a bit, so the visualisations that we will build in next module will show data for more than just 1 hour. Also, for Anomaly functions to detect anomalies, 'normal conditions' must first occur 2. Monitor IoT data 1. Check your IoT data made it to the Monitor data lake Back to the Monitor interface, click Monitor Entities . If you see 3 in Number of Entities , it means that your data did make it to the data lake. Let's have a look around. Click on CL_Asset . Then click on CL_Asset_1 , then on its Metrics tab. Play with the 'slider' on e.g. acceleration - you can see your data now. Go back to the CL_Asset main page, and click the Data tab. See all your (raw) IoT Metrics & Dimensions . Note that at this stage it is normal to see only a couple points on the graph as we have only been generating data for so long ! Play with the top 'slider' here too. 2. Create an Hourly Summary Dashboard Back to the CL_Asset main page, click New Summary . Enter Hourly as your Dashboard title , select Hourly Time grain , click all Dimensions . Click Next . Click all Data Item , and for just 1 reading e.g. temperature , select all Methods i.e. max , min , mean , std etc. Click Configure Dashboard . Click Configure Dashboard . The next page shows an overview of what the Dashboard will look like. Click Create . Note that it will take a couple minutes for your Hourly dashboard to be ready, and you will note a Preparing icon during that time. Once it is ready, your dashboard should look like this (with possibly less data points depending on how fast you have been to get here and for how long data has been sent). Notice the hourly grain of the cards (vs. the shorter time grain that you just saw on the CL_Asset_1 Metrics tab). On the left side in Summary Controls , notice the so-called Dimensions that correspond to the Metadata we associated to the CL_Asset Device Type and 3 Devices when we created them in the Watson IoT Platform. Notice how you can change the 'time scope' of each card. Also notice how you can view each card in 'full screen' mode, and further focus on a time period with the top slider-bar. Finally, also notice how the temperature card displays the max , min , mean etc that we defined via the Methods and how you can click on 1 or several of these. 3. Explore the Data Back to the CL_Asset main page, click on the Data tab. Observe that new Data Items have appeared, i.e. under the Metric (Calculated) section. Notice that for all the IoT Readings, a new reading_Hourly_mean calculated metric was created - this was automatically done when we crated the hourly dashboard in previous step. In the filer just below Data Item , start writing temp . This filters the data items displayed. Note that for the temperature reading, on top of the mean data item, temperature_Hourly_min , temperature_Hourly_max , temperature_Hourly_std etc were also created - that is because of the 8 Methods that we earlier selected for that data item when creating the dashboard. 4. Create new Data Items On top of those automatically generated calculated metric , it is of course possible to create a vast range of new calculated metric . In the following exercise, we will: (a - step 1 to 3) create an hourly count of the number of starts using the Count function, (b - step 4) use a simple PythonExpression function to create temperature readings in Fahrenheit vs. Celsius, (c - step 5 to 6) use the Entity Filter and Filter functions to retrieve data for only 1 of our Devices (vs. for all Devices of the CL_Asset Device Type). Let's go: On the Data tab, click the + icon, select the Count function, click Next . On the first screen, select starts as the data source, enter 1 (default value) in min_output . Click Next . Select Hourly in the Granularity , untick the Auto Schedule and enter 5 in Executing query and 2 in Calculating last fields. In the Output metric field, enter starts_Hourly_count . Click Create . NOTE : as always, naming convention is important. As the amount of your data items will grow, you want to use a consistent naming convention that will e.g. facilitate your data viewing capabilities by making filtering easy and straightforward. You will now see the new data item appear in your Metrics (calculated) menu. Wait for 5 minutes for results to appear. On the Data tab, click the + icon, select the PythonExpression function, click Next . In the expression field, type this: df['temperature'] * 1.8 + 32 - note this is a very simple Python expression using pandas syntax, for more info, see: Built-in functions and Using Expressions . Name the Output metric field temperature_farhenheit . Set the Schedule as we did in step 3., wait 5 minutes. Watch the newly created temperature_farhenheit data item. This is a 2-steps process. Firstly, on the Data tab, click the + icon, select the EntityFilter function, click Next . In the entity_list section, enter CL_Asset_1 . Click Next , name the Output metric field CL_Asset_1 . Set the Schedule as we did in step 3., wait 5 minutes. In Metrics (calculated) , search for then watch CL_Asset_1 . Secondly, we will use this filter and apply it to the temperature IoT reading. On the Data tab, click the + icon, select the Filter function, click Next . In the sources section, select the just created CL_Asset_1 data item. In the expression field, type ${CL_Asset_1} == True . In the filtered_sources field, select temperature . Click Next . Set the Schedule as we did in step 3. Name the Output metric field temperature_CL_Asset_1 . Wait 5 minutes. Watch the newly created data item which now displays the temperature values for CL_Asset_1 only ! 5. Create some anomalous IoT Readings Remember 2. Create IoT Simulation ? In that IoT simulation (which should have been running for some time now), we defined random ranges of values for each IoT reading, e.g. \"temperature\": random(35,40) . In this section, we are going to change that range during a couple minutes to simulate a sudden and temporary surge in temperature . That will enable us to demonstrate in 7. Create Anomaly Detection functions on your IoT data section that Monitor's out-of-the-box Anomaly Detection functions do actually spot that anomalous 'spike in temperature'. Back to the Watson IoT Platform , click the IoT Simulation box in bottom-right corner. Change the values of \"temperature\": random(35,40) line to \"temperature\": random(46,48) , click Save . Take note of the time on your watch. Let the updated simulation run for 3 to 4 minutes. After 3 to 4 minutes, set the \"temperature\": random(46,48) back to \"temperature\": random(35,40) , click Save . the 'anomaly' we just created is visible on the Dashboard ( 10 minutes, 1 hour, 6 hours, 12 hours views), i.e. we clearly see a temporary surge in the temperature readings in the top-right of the screen. NOTE : take note of the date and time when you generated those anomalous IoT readings. As you can see in below picture, the anomalous readings for these labs were created on 30 November 2020, around 04:50 PM. 6. [OPTIONAL] Understand Monitor's Anomaly Detection capabilities Although this section is optional, it is highly recommended. This is a full Lab on itself, and plan 2 to 3 hours to complete it. You can access it here: Monitor Anomalies . In this great deep-dive lab, you will: View 3 great short Youtube movies explaining all the ins and outs of Anomaly Detection. Create simulated Robots that Monitor enables you to easily create and that come with all the required data needed to understand and play with Anomaly Detection. Understand the distinction between Summary & Instance dashboards and create both. Understand how to create Metric Line Cards and display Anomaly Detections on them. Create and display Alerts and display them ... and so much more ! 7. Create Anomaly Detection functions on your IoT data In this section, we are going to create 5 Anomaly models and see if they detect the temperature anomalous IoT readings we generated in 5. Create some anomalous IoT Readings section. On the Data tab, click the + icon, enter Anomaly in the Search box and have a look at all out Monitor 's available models. Click the FFTbasedGeneralizedAnomalyScore one. Click Next . Select the Apply to all entities of the selected type scope. Click Next . Select the temperature as input item and leave the default windowsize to 12 . Click Next . Set the Schedule as in previous section, and name the Output metric field temperature_anomaly_fft . Wait 5 minutes, and now watch the temperature_anomaly_fft graph. Do notice how a sudden peak of the anomaly score is observed on the 04:00 PM line ... remember 04:50 PM on November 2020 ! This confirms that this FFT model did perfectly pick up the anomalous temperature IoT readings we generated. Repeat steps 5 to 6 (keep all the defaults) for the following anomaly detection functions: GeneralizedAnomalyScore , KMeansAnomalyScore , SaliencybasedGeneralizedAnomalyScore , SpectralAnomalyScore . Respecting the naming conventions, name your associated data items temperature_anomaly_generalized , temperature_anomaly_kmeans , temperature_anomaly_saliency , temperature_anomaly_spectral respectively. Open the corresponding Metric (calculated) data item and notice how all 5 Anomaly functions perfectly spotted the November 2020, 04:50 PM anomalies, i.e. display a sudden peak in their score at that time ! NOTE : the anomalies we earlier generated are very obvious - on purpose for this demo -, i.e. during just a couple minutes (around 04:50 PM), we generated temperature readings ranging from 46 to 48, whereas our IoT Simulation generated readings ranging from 35 to 40 for most of the time. No surprise then that all the 5 Anomaly models that we created spotted those obvious anomalies. However, be aware that those Monitor 's out-of-the-box anomaly models can detect much more than those obvious anomalies ! You can find more information on those models here: Unsupervised anomaly detectors and Supervised anomaly detectors . This picture gives a very quick overview of the main types of anomalies that Monitor can detect and which models are available. 8. Create Alerts based on Anomaly scores As you just learned, Monitor 's Anomaly Detection functions can easily spot anomalies and be viewed on a graph where the X-axis is Time and the Y-axis is an Anomaly Score . Each function returns a different score range (that is inherent to each model essence). What we are typically interested in our 'Anomaly Detection' work is to spot peaks in those scores, which correspond to the most likely anomalous readings we want to be alerted of. This is where Monitor's Alerts come into play. Alerts can be automatically generated in Monitor when one (any) of the Metrics of Monitor go above or below a certain value. In this exercise, we will generate Alerts based on the temperature_anomaly_* metrics we created in the previous section. The whole idea is that we want to be alerted when a serious anomaly occurs, but we do NOT want to be over alerted and drown into a so-called 'alert storm'. Also, what we want to avoid is generating way too many alerts into the system which would just 'pollute the database' with thousands of irrelevant and meaningless rows ! Because Anomaly Scores are something dynamic, it is key that we look at those score values first before creating alerts based on them. So first of all, let's have a detailed look at your anomaly scores. Let's focus just on temperature_anomaly_generalized , temperature_anomaly_kmeans and temperature_anomaly_fft in this exercise. Although your scores might be slightly different, what you should note is that, whereas the (max values of the) anomaly scores remained consistently low most of the time that our IoT Simulation was running (i.e. \"temperature\": random(35,40) ), we can observe a clear spike for each of those scores corresponding to the November 20, 04:50 PM surge (i.e. \"temperature\": random(46,48) ). The picture and table below give an idea of those scores. This should give us a good-enough idea of where to start with our alerts ... Anomaly Data Item Normal Condition Score Anomalous Condition Score temperature_anomaly_generalized <<0.200 >1.5 temperature_anomaly_kmeans <<10 >30 temperature_anomaly_fft <<100 >450 On the Data tab, click the + icon, select AlertHighValue . Select temperature_anomaly_kmeans as input_item , enter 30 as the upper_threshold , select Medium in Severity and New in Status . Click Next , set the Schedule and name it temperature_alert_kmeans . Repeat above step for temperature_alert_generalized ( input_item = temperature_anomaly_generalized , upper_threshold = 1.5 , Severity = High , Status = Validated ), and temperature_alert_fft ( input_item = temperature_anomaly_fft , upper_threshold = 450 , Severity = Low , Status = Acknowledged ). Let's now have a look at the number of Alerts we generated. First notice that the newly created Alerts appear as another data item in the Alert (calculated) section. Click on e.g. temperature_alert_kmeans . NOTE: it might be that you see nothing on the graph and on the table under it, e.g. that might be the case if your IoT reading anomalies were generated yesterday. That is normal, because the default time range of those graphs is 1 day. On the table below the graph, click Last Week (vs. the default). See that for temperature_alert_kmeans , 4 Alerts were generated. Under the column Entity ID , click CL_Asset_1 , this will open a new window. Click Events , click Last Week (vs. the default), and you will see that we generated about 10 Alerts for CL_Asset_1 - that is a reasonable number, we are not going to overflow the system ! 9. Update your Summary Dashboard In this final 'Monitor Lab' section, we are going to bring everything together and show how you can create and customise dashboards to - literally - visualise whatever you want from all the data we generated so far. Open the CL_Asset Hourly dashboard. Top-right, click Edit Dashboard . That will open the Dashboard visual editor where we can see the default cards that we created in the 2. Create an Hourly Summary Dashboard section. Notice you can drag and drop the cards around on the dashboard. Notice the types of cards that can be created in the Gallery - Time Series, Bar charts, Images etc. Let's delete all the cards, and re-create a Dashboard from scratch. On the top right of each card, click Delete . Let's first create an Image card on which we will then display hotspots. Download this image Image and save it as CL_Asset.jpg on your computer. Click Image in the Gallery and drag-drop the CL_Asset.jpg on the card. Then click Add from gallery and select the image. Make the card Size Medium (8x2) , select Last 24 hours in Time Range . In Settings , click Fill in Image display options . In the Gallery, click Edit Image . On the Hotspots tab, click Temperature and Vibration in X coordinate and Y coordinate boxes. Then click the blue spot that appeared on the map. On the Tooltip tab, enter This is a hotspot and select the Temperature icon and color. On the Data Source tab, select e.g. the data items as per picture below. Click Save . We'll now create a Value/KPI Card . Click Value/KPI Card in the Gallery. Enter Temperature Values in the Title . Click Medium thin (4x2) as Size and select temperature_Hourly_max , temperature_Hourly_mean and temperature_Hourly_min in the Data Section. For those 3 data items, click edit, enter 2 in Decimal Places , Celsius in Unit and add thresholds as per picture below. Click Save . Click Value/KPI Card in the Gallery. Create a card called Max Pressure card, with pressure and size Small (4x1) , and define a simple Threshold as in step 6. Repeat 7. for Starts Count . Click Save and Close and view the Dashboard. Create 2 new Time series line cards as per picture below. Create a Grouped bar (called Pressure, Torque, Temp Mean by City ) and a Stacked Bar (called Temperature, Pressure, Speed by City ) as per pictures below. NOTE: due to a little issue (solved in next release), make sure you add a \"aggregator\": \"mean\" line after each attribute via the Open JSON editor . Finally, let's create a final Data table card that displays Alerts, and a Time series line that displays the Max Temperature readings and all their Anomalies trends. Your final dashboard should look like this: Congratulations, you made it - hope you enjoyed this lab !","title":"Monitor on Maximo Application Suite 8.3 & Saas"},{"location":"monitor/monitor/#monitor-lab","text":"Before you begin: Log into your Monitor instance using your IBM ID and the environment details provided by the instructor.","title":"MONITOR Lab"},{"location":"monitor/monitor/#0-objectives","text":"In this Module you will: Generate the IoT data that will be used throughout the labs: Create a Device Type and 3 Devices of that Type Generate IoT data for those 3 Devices using an IoT simulation Create Physical & Logical interfaces to send the IoT data to the Monitor data lake Visualise the IoT data in a Watson IoT Platform simple dashboard Monitor that data, detect anomalies, create alerts and dashboards: Verify that the IoT data made it to the Monitor data lake Create a simple dashboard displaying the IoT data Create anomalous IoT readings during a short period of time and create anomaly detection functions that will pick them up [OPTIONAL] be directed to another deep-dive lab to understand the ins and outs of Anomaly Detection Create Alerts based on the anomaly scores Understand how to create advanced dashboards","title":"0. Objectives"},{"location":"monitor/monitor/#1-generate-iot-data","text":"","title":"1. Generate IoT data"},{"location":"monitor/monitor/#1-create-device-type-3-devices","text":"Let's first create a Device Type . From your Monitor Instance Home page, click Connect Devices On the opened Connect menu, click Open Platform Service application in the top-right corner. This will launch the associated Watson IoT Platform in a separate browser tab. Go to the Device Types menu, and click Add Device Type . Enter XY_Asset in the Name and Description fields - where XY are your initials. Note that for the rest of this lab, we will use CL_Asset (e.g. CL for Christophe Lucas). Click Next . On the next Metadata page, enter CL in Model and Manufacturer fields, and enter CL_Asset in Device Class field. The reason why we want to enter values here is to later show how Dimensions can be used in Monitor to slide and dice the data. Click Finish . Now, let's create 3 Devices of type CL_Asset . Stay in the Watson IoT Platform , go to the Browse menu and click Add Device . On the identity page, select your just-created CL_Asset as Entity Type and enter CL_Asset_1 in Device ID . Click Next . On the Device Information page, accept the defaults, click Next . On the Security page, accept the defaults, click Next . On the Summary page, accept the defaults, click Finish . Click Back , and repeat above steps 1. to 5. for 2 more Assets: CL_Asset_2 and CL_Asset_3 . Finally, go to the Browse menu, enter CL_Asset in the Search field, and you will now see your 3 Devices. You have now created the required CL_Asset Device Type and the 3 CL_Asset_1 , CL_Asset_2 and CL_Asset_3 Devices that we will use throughout the labs.","title":"1. Create Device Type &amp; 3 Devices"},{"location":"monitor/monitor/#2-create-iot-simulation","text":"Let's now send data to those 3 Devices ! Using the Watson IoT Platform IoT Simulation capabilities, it is possible to simulate a device and its IoT readings - exactly as if it was a real IoT device really connected to the platform and sending real IoT readings. We are going to use this great functionality as it allows one to literally simulate any asset (e.g. Pump, Engine, Truck, Conveyor Belt - you name it !), any IoT readings and do any demo. For this Lab, we will simulate our 3 CL_Asset_1_2_3 Devices generating the following IoT readings: temperature , vibration , pressure , speed , acceleration , load , torque , starts . You can of course change the IoT reading names and/or their values to fit your demo needs. First of all, make sure that in your Watson IoT Platform , Settings menu, the Activate Device Simulator is ON. Once that is done, you will see a little box in bottom-right of your screen showing 0 Simulation . Click on that 0 Simulation bottom-right box, and click Create Simulation . In the Select or create a device type box, select the CL_Asset device type you earlier created. That will open a window as you can see in picture below. In Event type name , enter CLA . in the Schedule field, enter 4 Every Minute . In the Payload field, copy-paste the following .json code. Make sure at this stage that the Store events in the data lake box remains unchecked ! Click Save . Click Use Registered Device , enter CL_Asset in the Pick Device box, select CL_Asset_1 . Repeat for CL_Asset_2 and CL_Asset_3 . You should now start seeing Events flowing in the bottom Events box. Note that the values in the random(35,40) functions can be considered being the 'standard operating conditions' for the given IoT reading. Later on in the lab, we will change those value ranges for short periods of time (i.e. change the temperature ranges from random(35,40) to random(46,49) ) and show how Monitor's out-of-the-box anomaly functions can automatically spot these 'anomalies' which are deviations from the 'standard operating conditions'. { \"temperature\": random(35,40), \"vibration\": random(1,5), \"pressure\": random(20,25), \"speed\": random(15,20), \"acceleration\": random(8,10), \"load\": random(90,110), \"torque\": random(12,14), \"starts\": increment(1,1) } The below pictures shows the 6 previous steps. Great, you now have your 3 CL_Asset_1_2_3 Devices generating IoT readings 4 times every minute. Let's check those readings on a Dashboard.","title":"2. Create IoT Simulation"},{"location":"monitor/monitor/#3-create-watson-iot-platform-dashboard","text":"Let's create a Dashboard so we can see the simulated IoT readings for 1 of our devices: CL_Asset_1 . This Dashboard will allow us to clearly visualise the anomalies earlier mentioned. Still in the Watson IoT Platform , click on the Boards menu. Click Create New Board . Name the Board CL_Asset IoT Readings Dashobard . Click Next then Submit . Open the Board. Let's first create a small card which displays the 8 IoT Readings we simulated, getting updated every 15 seconds. Click Add New Card . Select All device properties then CL_Asset_1 , then Next then Submit . Let's now create a card which shows the flow of data. Click Add New Card . Click Line Chart , then select CL_Asset_1 . Click Connect data set . In the event field, select CLA (that is the name of the IoT Simulation we created earlier), then in the Property select temperature . Repeat this for a couple more properties, e.g. vibration and pressure . Click Next , select the XL size, click Next then Submit . Drag and drop the second card next to the first one. Play with the 5 minutes to 24 hours views.","title":"3. Create Watson IoT Platform Dashboard"},{"location":"monitor/monitor/#4-create-physical-logical-interfaces","text":"So far, we have only generated simulated IoT data. What Monitor uses for all its visualisations and calculations is the data from the data lake . Monitor's data lake is being populated through the use of Physical & Logical interfaces. Let's create those interfaces and populate that data lake ! First let's create the Physical Interface . Still in the Watson IoT Platform , go to the Device Types menu, search then select CL_Asset , then click on the Interface menu. Click Create Physical Interface . Leave the default name CL_Asset_PI , click Next . Click Create event type . Wait 15 seconds or click Use Last Event Cache and you will see the CLA (which corresponds to the IoT Simulation we earlier created) event appear. Click that event, click Add . Cick Done . Let's now create the Logical Interface . Click Create Logical Interface . Leave the default name CL_Asset_LI , click Next . Click Add Property , Select the temperature , click Save . Repeat this for the 7 other IoT readings. Make sure you tick the Allow Additional Properties ON, as that would allow you to add more readings in the future if you wish. Click Next , click no event notifications and change it to All events . Click Apply , then Done . Click Activate twice.","title":"4. Create Physical &amp; Logical Interfaces"},{"location":"monitor/monitor/#5-take-a-break-and-let-some-magic-happen","text":"Brilliant ! You have created all that is needed to start monitoring your own IoT data. In the next module, we will check that your data lake is now populated. But first take a break (count 15 minutes at least, but I recommend several hours as all the following reports will show more data), because: some background job needs to run to populate your data lake with your IoT data, via the logical interface you just created. it is good for the IoT Simulation to keep running a bit, so the visualisations that we will build in next module will show data for more than just 1 hour. Also, for Anomaly functions to detect anomalies, 'normal conditions' must first occur","title":"5. Take a break and let some magic happen ..."},{"location":"monitor/monitor/#2-monitor-iot-data","text":"","title":"2. Monitor IoT data"},{"location":"monitor/monitor/#1-check-your-iot-data-made-it-to-the-monitor-data-lake","text":"Back to the Monitor interface, click Monitor Entities . If you see 3 in Number of Entities , it means that your data did make it to the data lake. Let's have a look around. Click on CL_Asset . Then click on CL_Asset_1 , then on its Metrics tab. Play with the 'slider' on e.g. acceleration - you can see your data now. Go back to the CL_Asset main page, and click the Data tab. See all your (raw) IoT Metrics & Dimensions . Note that at this stage it is normal to see only a couple points on the graph as we have only been generating data for so long ! Play with the top 'slider' here too.","title":"1. Check your IoT data made it to the Monitor data lake"},{"location":"monitor/monitor/#2-create-an-hourly-summary-dashboard","text":"Back to the CL_Asset main page, click New Summary . Enter Hourly as your Dashboard title , select Hourly Time grain , click all Dimensions . Click Next . Click all Data Item , and for just 1 reading e.g. temperature , select all Methods i.e. max , min , mean , std etc. Click Configure Dashboard . Click Configure Dashboard . The next page shows an overview of what the Dashboard will look like. Click Create . Note that it will take a couple minutes for your Hourly dashboard to be ready, and you will note a Preparing icon during that time. Once it is ready, your dashboard should look like this (with possibly less data points depending on how fast you have been to get here and for how long data has been sent). Notice the hourly grain of the cards (vs. the shorter time grain that you just saw on the CL_Asset_1 Metrics tab). On the left side in Summary Controls , notice the so-called Dimensions that correspond to the Metadata we associated to the CL_Asset Device Type and 3 Devices when we created them in the Watson IoT Platform. Notice how you can change the 'time scope' of each card. Also notice how you can view each card in 'full screen' mode, and further focus on a time period with the top slider-bar. Finally, also notice how the temperature card displays the max , min , mean etc that we defined via the Methods and how you can click on 1 or several of these.","title":"2. Create an Hourly Summary Dashboard"},{"location":"monitor/monitor/#3-explore-the-data","text":"Back to the CL_Asset main page, click on the Data tab. Observe that new Data Items have appeared, i.e. under the Metric (Calculated) section. Notice that for all the IoT Readings, a new reading_Hourly_mean calculated metric was created - this was automatically done when we crated the hourly dashboard in previous step. In the filer just below Data Item , start writing temp . This filters the data items displayed. Note that for the temperature reading, on top of the mean data item, temperature_Hourly_min , temperature_Hourly_max , temperature_Hourly_std etc were also created - that is because of the 8 Methods that we earlier selected for that data item when creating the dashboard.","title":"3. Explore the Data"},{"location":"monitor/monitor/#4-create-new-data-items","text":"On top of those automatically generated calculated metric , it is of course possible to create a vast range of new calculated metric . In the following exercise, we will: (a - step 1 to 3) create an hourly count of the number of starts using the Count function, (b - step 4) use a simple PythonExpression function to create temperature readings in Fahrenheit vs. Celsius, (c - step 5 to 6) use the Entity Filter and Filter functions to retrieve data for only 1 of our Devices (vs. for all Devices of the CL_Asset Device Type). Let's go: On the Data tab, click the + icon, select the Count function, click Next . On the first screen, select starts as the data source, enter 1 (default value) in min_output . Click Next . Select Hourly in the Granularity , untick the Auto Schedule and enter 5 in Executing query and 2 in Calculating last fields. In the Output metric field, enter starts_Hourly_count . Click Create . NOTE : as always, naming convention is important. As the amount of your data items will grow, you want to use a consistent naming convention that will e.g. facilitate your data viewing capabilities by making filtering easy and straightforward. You will now see the new data item appear in your Metrics (calculated) menu. Wait for 5 minutes for results to appear. On the Data tab, click the + icon, select the PythonExpression function, click Next . In the expression field, type this: df['temperature'] * 1.8 + 32 - note this is a very simple Python expression using pandas syntax, for more info, see: Built-in functions and Using Expressions . Name the Output metric field temperature_farhenheit . Set the Schedule as we did in step 3., wait 5 minutes. Watch the newly created temperature_farhenheit data item. This is a 2-steps process. Firstly, on the Data tab, click the + icon, select the EntityFilter function, click Next . In the entity_list section, enter CL_Asset_1 . Click Next , name the Output metric field CL_Asset_1 . Set the Schedule as we did in step 3., wait 5 minutes. In Metrics (calculated) , search for then watch CL_Asset_1 . Secondly, we will use this filter and apply it to the temperature IoT reading. On the Data tab, click the + icon, select the Filter function, click Next . In the sources section, select the just created CL_Asset_1 data item. In the expression field, type ${CL_Asset_1} == True . In the filtered_sources field, select temperature . Click Next . Set the Schedule as we did in step 3. Name the Output metric field temperature_CL_Asset_1 . Wait 5 minutes. Watch the newly created data item which now displays the temperature values for CL_Asset_1 only !","title":"4. Create new Data Items"},{"location":"monitor/monitor/#5-create-some-anomalous-iot-readings","text":"Remember 2. Create IoT Simulation ? In that IoT simulation (which should have been running for some time now), we defined random ranges of values for each IoT reading, e.g. \"temperature\": random(35,40) . In this section, we are going to change that range during a couple minutes to simulate a sudden and temporary surge in temperature . That will enable us to demonstrate in 7. Create Anomaly Detection functions on your IoT data section that Monitor's out-of-the-box Anomaly Detection functions do actually spot that anomalous 'spike in temperature'. Back to the Watson IoT Platform , click the IoT Simulation box in bottom-right corner. Change the values of \"temperature\": random(35,40) line to \"temperature\": random(46,48) , click Save . Take note of the time on your watch. Let the updated simulation run for 3 to 4 minutes. After 3 to 4 minutes, set the \"temperature\": random(46,48) back to \"temperature\": random(35,40) , click Save . the 'anomaly' we just created is visible on the Dashboard ( 10 minutes, 1 hour, 6 hours, 12 hours views), i.e. we clearly see a temporary surge in the temperature readings in the top-right of the screen. NOTE : take note of the date and time when you generated those anomalous IoT readings. As you can see in below picture, the anomalous readings for these labs were created on 30 November 2020, around 04:50 PM.","title":"5. Create some anomalous IoT Readings"},{"location":"monitor/monitor/#6-optional-understand-monitors-anomaly-detection-capabilities","text":"Although this section is optional, it is highly recommended. This is a full Lab on itself, and plan 2 to 3 hours to complete it. You can access it here: Monitor Anomalies . In this great deep-dive lab, you will: View 3 great short Youtube movies explaining all the ins and outs of Anomaly Detection. Create simulated Robots that Monitor enables you to easily create and that come with all the required data needed to understand and play with Anomaly Detection. Understand the distinction between Summary & Instance dashboards and create both. Understand how to create Metric Line Cards and display Anomaly Detections on them. Create and display Alerts and display them ... and so much more !","title":"6. [OPTIONAL] Understand Monitor's Anomaly Detection capabilities"},{"location":"monitor/monitor/#7-create-anomaly-detection-functions-on-your-iot-data","text":"In this section, we are going to create 5 Anomaly models and see if they detect the temperature anomalous IoT readings we generated in 5. Create some anomalous IoT Readings section. On the Data tab, click the + icon, enter Anomaly in the Search box and have a look at all out Monitor 's available models. Click the FFTbasedGeneralizedAnomalyScore one. Click Next . Select the Apply to all entities of the selected type scope. Click Next . Select the temperature as input item and leave the default windowsize to 12 . Click Next . Set the Schedule as in previous section, and name the Output metric field temperature_anomaly_fft . Wait 5 minutes, and now watch the temperature_anomaly_fft graph. Do notice how a sudden peak of the anomaly score is observed on the 04:00 PM line ... remember 04:50 PM on November 2020 ! This confirms that this FFT model did perfectly pick up the anomalous temperature IoT readings we generated. Repeat steps 5 to 6 (keep all the defaults) for the following anomaly detection functions: GeneralizedAnomalyScore , KMeansAnomalyScore , SaliencybasedGeneralizedAnomalyScore , SpectralAnomalyScore . Respecting the naming conventions, name your associated data items temperature_anomaly_generalized , temperature_anomaly_kmeans , temperature_anomaly_saliency , temperature_anomaly_spectral respectively. Open the corresponding Metric (calculated) data item and notice how all 5 Anomaly functions perfectly spotted the November 2020, 04:50 PM anomalies, i.e. display a sudden peak in their score at that time ! NOTE : the anomalies we earlier generated are very obvious - on purpose for this demo -, i.e. during just a couple minutes (around 04:50 PM), we generated temperature readings ranging from 46 to 48, whereas our IoT Simulation generated readings ranging from 35 to 40 for most of the time. No surprise then that all the 5 Anomaly models that we created spotted those obvious anomalies. However, be aware that those Monitor 's out-of-the-box anomaly models can detect much more than those obvious anomalies ! You can find more information on those models here: Unsupervised anomaly detectors and Supervised anomaly detectors . This picture gives a very quick overview of the main types of anomalies that Monitor can detect and which models are available.","title":"7. Create Anomaly Detection functions on your IoT data"},{"location":"monitor/monitor/#8-create-alerts-based-on-anomaly-scores","text":"As you just learned, Monitor 's Anomaly Detection functions can easily spot anomalies and be viewed on a graph where the X-axis is Time and the Y-axis is an Anomaly Score . Each function returns a different score range (that is inherent to each model essence). What we are typically interested in our 'Anomaly Detection' work is to spot peaks in those scores, which correspond to the most likely anomalous readings we want to be alerted of. This is where Monitor's Alerts come into play. Alerts can be automatically generated in Monitor when one (any) of the Metrics of Monitor go above or below a certain value. In this exercise, we will generate Alerts based on the temperature_anomaly_* metrics we created in the previous section. The whole idea is that we want to be alerted when a serious anomaly occurs, but we do NOT want to be over alerted and drown into a so-called 'alert storm'. Also, what we want to avoid is generating way too many alerts into the system which would just 'pollute the database' with thousands of irrelevant and meaningless rows ! Because Anomaly Scores are something dynamic, it is key that we look at those score values first before creating alerts based on them. So first of all, let's have a detailed look at your anomaly scores. Let's focus just on temperature_anomaly_generalized , temperature_anomaly_kmeans and temperature_anomaly_fft in this exercise. Although your scores might be slightly different, what you should note is that, whereas the (max values of the) anomaly scores remained consistently low most of the time that our IoT Simulation was running (i.e. \"temperature\": random(35,40) ), we can observe a clear spike for each of those scores corresponding to the November 20, 04:50 PM surge (i.e. \"temperature\": random(46,48) ). The picture and table below give an idea of those scores. This should give us a good-enough idea of where to start with our alerts ... Anomaly Data Item Normal Condition Score Anomalous Condition Score temperature_anomaly_generalized <<0.200 >1.5 temperature_anomaly_kmeans <<10 >30 temperature_anomaly_fft <<100 >450 On the Data tab, click the + icon, select AlertHighValue . Select temperature_anomaly_kmeans as input_item , enter 30 as the upper_threshold , select Medium in Severity and New in Status . Click Next , set the Schedule and name it temperature_alert_kmeans . Repeat above step for temperature_alert_generalized ( input_item = temperature_anomaly_generalized , upper_threshold = 1.5 , Severity = High , Status = Validated ), and temperature_alert_fft ( input_item = temperature_anomaly_fft , upper_threshold = 450 , Severity = Low , Status = Acknowledged ). Let's now have a look at the number of Alerts we generated. First notice that the newly created Alerts appear as another data item in the Alert (calculated) section. Click on e.g. temperature_alert_kmeans . NOTE: it might be that you see nothing on the graph and on the table under it, e.g. that might be the case if your IoT reading anomalies were generated yesterday. That is normal, because the default time range of those graphs is 1 day. On the table below the graph, click Last Week (vs. the default). See that for temperature_alert_kmeans , 4 Alerts were generated. Under the column Entity ID , click CL_Asset_1 , this will open a new window. Click Events , click Last Week (vs. the default), and you will see that we generated about 10 Alerts for CL_Asset_1 - that is a reasonable number, we are not going to overflow the system !","title":"8. Create Alerts based on Anomaly scores"},{"location":"monitor/monitor/#9-update-your-summary-dashboard","text":"In this final 'Monitor Lab' section, we are going to bring everything together and show how you can create and customise dashboards to - literally - visualise whatever you want from all the data we generated so far. Open the CL_Asset Hourly dashboard. Top-right, click Edit Dashboard . That will open the Dashboard visual editor where we can see the default cards that we created in the 2. Create an Hourly Summary Dashboard section. Notice you can drag and drop the cards around on the dashboard. Notice the types of cards that can be created in the Gallery - Time Series, Bar charts, Images etc. Let's delete all the cards, and re-create a Dashboard from scratch. On the top right of each card, click Delete . Let's first create an Image card on which we will then display hotspots. Download this image Image and save it as CL_Asset.jpg on your computer. Click Image in the Gallery and drag-drop the CL_Asset.jpg on the card. Then click Add from gallery and select the image. Make the card Size Medium (8x2) , select Last 24 hours in Time Range . In Settings , click Fill in Image display options . In the Gallery, click Edit Image . On the Hotspots tab, click Temperature and Vibration in X coordinate and Y coordinate boxes. Then click the blue spot that appeared on the map. On the Tooltip tab, enter This is a hotspot and select the Temperature icon and color. On the Data Source tab, select e.g. the data items as per picture below. Click Save . We'll now create a Value/KPI Card . Click Value/KPI Card in the Gallery. Enter Temperature Values in the Title . Click Medium thin (4x2) as Size and select temperature_Hourly_max , temperature_Hourly_mean and temperature_Hourly_min in the Data Section. For those 3 data items, click edit, enter 2 in Decimal Places , Celsius in Unit and add thresholds as per picture below. Click Save . Click Value/KPI Card in the Gallery. Create a card called Max Pressure card, with pressure and size Small (4x1) , and define a simple Threshold as in step 6. Repeat 7. for Starts Count . Click Save and Close and view the Dashboard. Create 2 new Time series line cards as per picture below. Create a Grouped bar (called Pressure, Torque, Temp Mean by City ) and a Stacked Bar (called Temperature, Pressure, Speed by City ) as per pictures below. NOTE: due to a little issue (solved in next release), make sure you add a \"aggregator\": \"mean\" line after each attribute via the Open JSON editor . Finally, let's create a final Data table card that displays Alerts, and a Time series line that displays the Max Temperature readings and all their Anomalies trends. Your final dashboard should look like this: Congratulations, you made it - hope you enjoyed this lab !","title":"9. Update your Summary Dashboard"},{"location":"predict/predict/","text":"[Page last updated on 06 May 2021] PREDICT Lab The PREDICT lab does not exist yet. It will be created only for the MAS83-Predict version - stay tuned !","title":"Predict on Maximo Application Suite 8.3 [TBA]"},{"location":"predict/predict/#predict-lab","text":"The PREDICT lab does not exist yet. It will be created only for the MAS83-Predict version - stay tuned !","title":"PREDICT Lab"}]}